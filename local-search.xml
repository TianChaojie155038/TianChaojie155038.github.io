<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>好久不见，想你~~</title>
    <link href="/2021/06/27/long_time_no_see/"/>
    <url>/2021/06/27/long_time_no_see/</url>
    
    <content type="html"><![CDATA[<h2 id="好久不见，想你"><a href="#好久不见，想你" class="headerlink" title="好久不见，想你~~"></a>好久不见，想你~~</h2><p>距博主上次发布博文已经过去了69天、更新博文已经过去了41天。</p><h5 id="为什么这么久都不更新？"><a href="#为什么这么久都不更新？" class="headerlink" title="为什么这么久都不更新？"></a>为什么这么久都不更新？</h5><p>①博主每次放假在家的时间通常只有1.5天，在这1.5天中：博主需要完成学校布置的作业并在剩下的时间内完成博客的创作到发布，在此之前，博主也确实是这么干的。</p><p>②在极短的时间内很难完成高质量博文的创作。如果到假期结束了还未完成发布，就得等到下一个假期，这之间需要隔11天，这就只能让我对一些看起来宏伟的计划敬而远之了。</p><p>③博主甚至想在学校写博客。但是早上6:05起床到晚上9:55就寝，面临学业的全方位包围，与世隔绝的环境，又怎么能有好的博文呢。</p><h5 id="这段时间在干什么？"><a href="#这段时间在干什么？" class="headerlink" title="这段时间在干什么？"></a>这段时间在干什么？</h5><p>①博主将更多精力放在了学业上，以应付学考（与高中毕业有关）。</p><p>②博主想先停下脚步，环顾四周，学习更多更好的博客技术。</p><p>③继续探索计算机~</p><h5 id="马上放暑假了"><a href="#马上放暑假了" class="headerlink" title="马上放暑假了"></a>马上放暑假了</h5><p>博主会继续推送有关计算机的博文、对博客进行整改（美化等），对了，还有个比较有意思的东西—地道的经济学，它能助你变得更理性、悦纳和进取。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>机器学习中的导数和梯度（学习笔记）</title>
    <link href="/2021/04/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E5%AF%BC%E6%95%B0%E5%92%8C%E6%A2%AF%E5%BA%A6%EF%BC%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
    <url>/2021/04/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E5%AF%BC%E6%95%B0%E5%92%8C%E6%A2%AF%E5%BA%A6%EF%BC%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="机器学习中的导数和梯度（学习笔记）"><a href="#机器学习中的导数和梯度（学习笔记）" class="headerlink" title="机器学习中的导数和梯度（学习笔记）"></a>机器学习中的导数和梯度（学习笔记）</h2><p>本文将会把博主对于导数和梯度在机器学习中的意义和应用的理解做一个整理并供大家参考，欢迎批评指正！文章总体结构：<img src="/images/machine_learning_daoti/1.png" alt="1"></p><p>传播搞机的快乐，分享计算机知识！—TCJ</p><hr><h4 id="1-导数和梯度的意义"><a href="#1-导数和梯度的意义" class="headerlink" title="1.导数和梯度的意义"></a>1.导数和梯度的意义</h4><h5 id="1-1导数："><a href="#1-1导数：" class="headerlink" title="1.1导数："></a>1.1导数：</h5><p>导数（derivative）是微积分的重要概念，设函数 y = f(x) 在点 x0 的某个领域内有定义，当自变量 x 在 x0 的某个邻域内有定义 ，当自变量 x 在 x0 的处取得增量 △x 时，相应的函数 y 将取得增量 △y ；如果 △y 与 △x 之比在 △x → 0 时存在极限，则称函数 y = f(x) 在点 x0 处可导，并称这个极限为函数 y = f(x) 在点 x0 的导数。</p><p>这个定义是不是有点像在物理上求瞬时速度？</p><p>v = s / t ；当 t → 0 时， v 可看作在某一时刻的瞬时速度。</p><p>在几何上，导数可看作是函数在某一点的切线的斜率。<img src="/images/machine_learning_daoti/2.gif" alt="2"></p><p>如图所示，当 △t 趋近于 0 时，导数就是函数 f(x) 在 t0 点的切线。此时可求得在时刻 t0 时的瞬时速度。</p><h5 id="1-2梯度："><a href="#1-2梯度：" class="headerlink" title="1.2梯度："></a>1.2梯度：</h5><p>梯度（gradient）是一个向量，它既有方向又有大小，它的方向是某一函数在某点处变化率最大的方向，此时它的大小就是变化率。</p><p>我们假设一个场景：现在有一个宝箱，放在山顶最高处，山下有三队人马同时开始上山，向宝箱进发</p><p><u>注明：</u>我们假设此处最快到达最高处的队伍获胜，而不去考虑实际的路程等。也就是和宝箱处于同一高度即可，不去管他们之间的水平距离。</p><p>显然，他们需要对当前所处位置做一个判断，找出走最少的路上升最大的高度的方向。然后沿着这个方向走几步，再判断方向，再走几步，以此类推，直到走到最高处。</p><p>类似的，梯度就是这个方向，山就是某个函数，宝箱所处位置就是函数的最高点，三队人马是除最高点外的其它任意三个函数上的点。可以看出，梯度的方向就是函数在某点变化率最大的方向，有了它的帮助，可找到函数的最高点或最低点。</p><h5 id="1-3小结："><a href="#1-3小结：" class="headerlink" title="1.3小结："></a>1.3小结：</h5><p>导数在几何上可看作某一函数上在某一点的切线的斜率，</p><p>对于单个自变量的函数，</p><p>导数就是该点的梯度。</p><p>对于多个自变量的函数，</p><p>我们对每个自变量都进行求导，</p><p>梯度就是每个导数所组成的向量。</p><p>梯度方向是某一函数在某一点上的变化率最大的方向，由此进行迭代计算可找到函数的最值。</p><h4 id="2-导数和梯度的数学计算"><a href="#2-导数和梯度的数学计算" class="headerlink" title="2.导数和梯度的数学计算"></a>2.导数和梯度的数学计算</h4><p>了解了导数的基本概念后，我们需要对它进行计算才能运用到实际。</p><p>从它的定义可知，</p><p>若我们已知某一物体的行进路程和时间可由图中的函数描述（此处近似看作函数 y = x*x , 方便讨论），</p><p>显然，t &gt;= 0 ；且当 t = 0 时；函数值为 0 ，是该函数的最低点。</p><p>现在我们任取一时间点 t0 = 100，</p><p>用梯度下降的方法找到 路程的最小值 和 此时的时间 t1 ，</p><p>对于任一 t ( t&gt;=0 )，求导得到：f ’(t) = 2t；过程如下</p><p><img src="/images/machine_learning_daoti/3.png" alt="3"></p><p>此处 μ 为每次更新的步长，取值 0.1，前面添加“ — ”号表示沿着负梯度方向（μ 若过大，可能会错过最低点；若过小，可能会迟迟找不到最低点）</p><p>我们让计算机来帮忙算一下</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sec</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        <span class="hljs-keyword">double</span> rate = <span class="hljs-number">0.1</span>;<br>        <span class="hljs-keyword">double</span> t0 = <span class="hljs-number">100</span>;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (<span class="hljs-keyword">true</span>)&#123;<br>            i++;<span class="hljs-comment">//记录迭代次数</span><br>            <span class="hljs-keyword">double</span> s = t0*t0;<br>            t0 = t0 -<span class="hljs-number">2</span>*rate*t0;<br>            System.out.println(<span class="hljs-string">&quot;第&quot;</span>+i+<span class="hljs-string">&quot;次迭代&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;时间 : &quot;</span>+t0);<br>            System.out.println(<span class="hljs-string">&quot;路程 : &quot;</span>+s);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><img src="/images/machine_learning_daoti/4.png" alt="4"></p><p>计算机瞬间就找到了最小路程为 0 ，时间为 1.0E-323（这里不是 0 是因为计算精度造成的，但可近似看作是 0）</p><p>当然，用梯度下降来求解此函数的最小值是没有现实意义的，更一般的，机器学习任务中的特征空间大多是多维的（即拥有多个自变量），下面让我们来讨论一下它在机器学习中的具体应用。</p><h5 id="2-1知识点小结："><a href="#2-1知识点小结：" class="headerlink" title="2.1知识点小结："></a>2.1知识点小结：</h5><p>求导公式：<img src="/images/machine_learning_daoti/5.png" alt="5"></p><h4 id="3-导数和梯度的应用"><a href="#3-导数和梯度的应用" class="headerlink" title="3.导数和梯度的应用"></a>3.导数和梯度的应用</h4><p>在机器学习任务中，我们一般会选择一个代价函数来描述学得的模型的输出与真实值之间的差距（即误差），并通过不断减小代价函数的值来优化模型。</p><p>例如：</p><p>常用的线性回归模型，</p><p>y = <strong>w</strong> * <strong>x</strong> + b，</p><p>用合适的代价函数描述误差，</p><p>E = (1/2)*Σ（f(x) – y）^2，（1/2 是为了抵销平方后的 2，对结果无影响）</p><p>试着减小它的误差，</p><p>对此进行求导，</p><p><img src="/images/machine_learning_daoti/6.png" alt="6"></p><p>链式法则可有效降低求导复杂度</p><p><img src="/images/machine_learning_daoti/7.png" alt="7"></p><p><img src="/images/machine_learning_daoti/8.png" alt="8"></p><p>往梯度的反方向上适当前进，</p><p>△wi = – μ * xi * ( Y – y )  ，（Y 是模型的输出，y 是真实值，x 是输入的特征，μ是学习率）</p><p>同理可得，</p><p>△b = – μ * ( Yi – yi )</p><h5 id="3-1小结："><a href="#3-1小结：" class="headerlink" title="3.1小结："></a>3.1小结：</h5><p>导数和梯度在机器学习中有重要的应用，可以说是智能原理的核心。</p><p>常见的神经网络模型就是基于此的。</p><h4 id="4-用对率回归函数实践"><a href="#4-用对率回归函数实践" class="headerlink" title="4.用对率回归函数实践"></a>4.用对率回归函数实践</h4><p>有了第三节的讨论，</p><p>我们可类似的对对率回归函数进行学习规则的推导，</p><p>y = 1/(1+e^-z )，</p><p>省略过程，</p><p>对 f(x) 求导得到，</p><p>f’(x) = f(x)*(1–f(x))，</p><p>仍用均方误差描述，</p><p>最终对于 z = <strong>w</strong> * <strong>x</strong> + b 中的 <strong>w</strong> 和 b，</p><p>其更新式为，</p><p>△wi = –μ * xi * Y * (1–Y) * (Y–y)</p><p>△b = –μ * Y * (1–Y) * (Y–y)</p><p> 要进行机器学习，首先得要有数据，这里使用一个西瓜数据集（来源《机器学习》侵权即删），我们构造一个能分类西瓜好坏的学习模型。</p><p>并用留出法对原始数据进行处理，分为训练集和测试集</p><p>最后用错误率来评估模型性能</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sigmoid</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 训练集:</span><br><span class="hljs-comment">     * (正例，都是好瓜①密度 0.697 含糖率 0.460  ②密度 0.774 含糖率0.376  ③密度 0.634 含糖率 0.264</span><br><span class="hljs-comment">     * ④密度 0.608 含糖率 0.318 ⑤密度 0.556 含糖率 0.215)</span><br><span class="hljs-comment">     * (反例①密度 0.666 含糖率 0.091 ②密度 0.243 含糖率 0.267 ③密度 0.245 含糖率 0.057</span><br><span class="hljs-comment">     * ④密度 0.343 含糖率 0.099 ⑤密度 0.639 含糖率 0.161 ⑥密度 0.657 含糖率 0.198</span><br><span class="hljs-comment">     * )</span><br><span class="hljs-comment">     * 测试集:</span><br><span class="hljs-comment">     * (正例①密度 0.481 含糖率 0.149 ②密度 0.437 含糖率 0.211 ③密度 0.403 含糖率 0.237)</span><br><span class="hljs-comment">     * (反例①密度 0.593 含糖率 0.042 ②密度 0.719 含糖率 0.103 ④密度 0.360 含糖率 0.370)</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> InterruptedException </span>&#123;<br>        List traindatas = <span class="hljs-keyword">new</span> ArrayList();<br>        List traindatass = <span class="hljs-keyword">new</span> ArrayList();<br>        List zresult = <span class="hljs-keyword">new</span> ArrayList();<br>        traindatas.add(<span class="hljs-number">0.697</span>);<br>        traindatass.add(<span class="hljs-number">0.460</span>);<br>        traindatas.add(<span class="hljs-number">0.774</span>);<br>        traindatass.add(<span class="hljs-number">0.376</span>);<br>        traindatas.add(<span class="hljs-number">0.634</span>);<br>        traindatass.add(<span class="hljs-number">0.264</span>);<br>        traindatas.add(<span class="hljs-number">0.608</span>);<br>        traindatass.add(<span class="hljs-number">0.318</span>);<br>        traindatas.add(<span class="hljs-number">0.556</span>);<br>        traindatass.add(<span class="hljs-number">0.215</span>);<br>        <span class="hljs-comment">//正例↑</span><br>        traindatas.add(<span class="hljs-number">0.666</span>);<br>        traindatass.add(<span class="hljs-number">0.091</span>);<br>        traindatas.add(<span class="hljs-number">0.243</span>);<br>        traindatass.add(<span class="hljs-number">0.267</span>);<br>        traindatas.add(<span class="hljs-number">0.245</span>);<br>        traindatass.add(<span class="hljs-number">0.057</span>);<br>        traindatas.add(<span class="hljs-number">0.343</span>);<br>        traindatass.add(<span class="hljs-number">0.099</span>);<br>        traindatas.add(<span class="hljs-number">0.639</span>);<br>        traindatass.add(<span class="hljs-number">0.161</span>);<br>        traindatas.add(<span class="hljs-number">0.657</span>);<br>        traindatass.add(<span class="hljs-number">0.198</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        List ftraindatas = <span class="hljs-keyword">new</span> ArrayList();<br>        List ftraindatass = <span class="hljs-keyword">new</span> ArrayList();<br>        List fzresult = <span class="hljs-keyword">new</span> ArrayList();<br>        ftraindatas.add(<span class="hljs-number">0.481</span>);<br>        ftraindatass.add(<span class="hljs-number">0.149</span>);<br>        ftraindatas.add(<span class="hljs-number">0.437</span>);<br>        ftraindatass.add(<span class="hljs-number">0.211</span>);<br>        ftraindatas.add(<span class="hljs-number">0.593</span>);<br>        ftraindatass.add(<span class="hljs-number">0.042</span>);<br>        ftraindatas.add(<span class="hljs-number">0.719</span>);<br>        ftraindatass.add(<span class="hljs-number">0.103</span>);<br>        ftraindatas.add(<span class="hljs-number">0.403</span>);<br>        ftraindatass.add(<span class="hljs-number">0.237</span>);<br>        ftraindatas.add(<span class="hljs-number">0.360</span>);<br>        ftraindatass.add(<span class="hljs-number">0.370</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">float</span> f = (<span class="hljs-keyword">float</span>) ftraindatas.size() / (traindatas.size() + ftraindatas.size());<br>        System.out.println(<span class="hljs-string">&quot;训练集数据比例:&quot;</span> + (<span class="hljs-number">1</span> - f));<span class="hljs-comment">//此处为0.64</span><br>        List ws = <span class="hljs-keyword">new</span> ArrayList();<br>        ws.add(<span class="hljs-number">0.8</span>);<span class="hljs-comment">//初始化权重</span><br>        ws.add(<span class="hljs-number">0.1</span>);<br>        <span class="hljs-keyword">double</span> b = <span class="hljs-number">1</span>;<span class="hljs-comment">//初始化偏置项</span><br>        <span class="hljs-keyword">double</span> rate = <span class="hljs-number">0.1</span>;<span class="hljs-comment">//学习率</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++) &#123;<span class="hljs-comment">//进行500轮学习</span><br>            <span class="hljs-keyword">int</span> ii = i + <span class="hljs-number">1</span>;<br>            System.out.println(<span class="hljs-string">&quot;第&quot;</span> + ii + <span class="hljs-string">&quot;轮学习&quot;</span>);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">11</span>; j++) &#123;<br>                <span class="hljs-keyword">double</span> x1 = Double.valueOf(traindatas.get(j).toString());<br>                <span class="hljs-keyword">double</span> x2 = Double.valueOf(traindatass.get(j).toString());<br>                <span class="hljs-keyword">double</span> y = Double.valueOf(zresult.get(j).toString());<br>                <span class="hljs-keyword">double</span> Y = <span class="hljs-number">1</span> / (<span class="hljs-number">1</span> + Math.pow(Math.E, -(Double.valueOf(ws.get(<span class="hljs-number">0</span>).toString()) * x1 + Double.valueOf(ws.get(<span class="hljs-number">1</span>).toString()) * x2 + b)));<br>                ws.set(<span class="hljs-number">0</span>, Double.valueOf(ws.get(<span class="hljs-number">0</span>).toString()) - rate * x1 * Y * (<span class="hljs-number">1</span> - Y) * (Y - y));<br>                ws.set(<span class="hljs-number">1</span>, Double.valueOf(ws.get(<span class="hljs-number">1</span>).toString()) - rate * x2 * Y * (<span class="hljs-number">1</span> - Y) * (Y - y));<br>                b = b - rate * Y * (<span class="hljs-number">1</span> - Y) * (Y - y);<br>                System.out.println(<span class="hljs-string">&quot;w1:&quot;</span> + ws.get(<span class="hljs-number">0</span>));<br>            &#125;<br>            <span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>;<span class="hljs-comment">//记录错误个数</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">6</span>; k++) &#123;<span class="hljs-comment">//测试</span><br>                <span class="hljs-keyword">double</span> x1 = Double.valueOf(ftraindatas.get(k).toString());<br>                <span class="hljs-keyword">double</span> x2 = Double.valueOf(ftraindatass.get(k).toString());<br>                <span class="hljs-keyword">double</span> y = Double.valueOf(fzresult.get(k).toString());<br>                <span class="hljs-keyword">double</span> Y = <span class="hljs-number">1</span> / (<span class="hljs-number">1</span> + Math.pow(Math.E, Double.valueOf(ws.get(<span class="hljs-number">0</span>).toString()) * x1 + Double.valueOf(ws.get(<span class="hljs-number">1</span>).toString()) * x2 + b));<br><br>                <span class="hljs-keyword">if</span> (Y &gt; <span class="hljs-number">0.5</span> &amp; y == <span class="hljs-number">1.0</span>) &#123;<br><br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (Y &lt; <span class="hljs-number">0.5</span> &amp; y == <span class="hljs-number">0.0</span>) &#123;<br><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    c++;<br>                    System.out.println(<span class="hljs-string">&quot;第&quot;</span> + k + <span class="hljs-string">&quot;个示例分类错误&quot;</span>);<br>                &#125;<br><br>            &#125;<br>            System.out.println(<span class="hljs-string">&quot;错误率&quot;</span> + c / <span class="hljs-number">6.0</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><img src="/images/machine_learning_daoti/9.png" alt="9"></p><p>在进行了917次学习后，模型错误率从 0.5 降到了 0.33 ，有趣的是在第26轮学习后，错误率从0.5上升到了0.83，实际上，生活中的机器学习任务要比这复杂得多，往往还要考虑 过拟合、最优解 等。这也就是为什么此处错误率会上升的原因<img src="/images/machine_learning_daoti/10.png" alt="10"></p><p>拿 w1 举例，w1 每次更新的值很小，只有多次训练才能找到一个局部最优解。</p><p>这里只是简单构建了一个分类模型，为了说明导数和梯度在机器学习中确实具有重要意义。</p><h5 id="4-1小结："><a href="#4-1小结：" class="headerlink" title="4.1小结："></a>4.1小结：</h5><p>对于一个学习模型，我们可用代价函数描述它的误差，通过求导找到此函数变化率最大的方向，让自变量（即要学习的参数）往此方向的反方向适当改变值即可优化模型的性能。这就是基于梯度下降法的学习。</p><h4 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h4><p>导数在几何上可看作函数在某一点的切线斜率（也是梯度），</p><p>该方向是变化率最大的方向，</p><p>导数计算公式为<img src="/images/machine_learning_daoti/5.png" alt="5">，</p><p>基于此进行学习可得到最优参数，</p><p>这就是梯度下降法。</p><hr><p>最后感谢CSDN上同学分享的知识，谢谢！</p><p>笔记第二部分完成时间—2021/5/3 10:06 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搞机两周年</title>
    <link href="/2021/04/17/2021-04-3-%E6%90%9E%E6%9C%BA%E4%B8%A4%E5%91%A8%E5%B9%B4/"/>
    <url>/2021/04/17/2021-04-3-%E6%90%9E%E6%9C%BA%E4%B8%A4%E5%91%A8%E5%B9%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="搞机两周年"><a href="#搞机两周年" class="headerlink" title="搞机两周年"></a>搞机两周年</h1><p>—GTA5！GTA5！！GTA5！！！我一定要玩到！</p><p>2年前的一天晚上，具体来说是2月15日晚，博主刚从家人那里拿到了新年的压岁钱，在此之前，博主对一款游戏产生了强烈的兴趣，但家里8年前的电脑正处于宕机状态。于是，趁这个其乐融融的日子里我提出了买新电脑的要求，结果是被当场驳回。但是博主面对梦想中的游戏怎么会就此罢休呢，恰巧博主在进行这方面的努力后了解到了组装电脑。</p><p>事情是这样的，我在淘宝上欣喜地挑电脑时，看上了一款组装电脑，但是支付宝对未成年人有单次支付上限（1000元），再加上家里人的拒绝，博主就想从网上买小零件后再组装起来，这样不就行了？（之后的事实证明这的确可行）。</p><p>此时的博主仿佛又看到了希望，便立马在淘宝上下了一个电脑咨询的单，经过一翻激情讨论后，博主随即就挑好了各零件，现在万事具备，就等快递到了。</p><p>（实际上博主先是买了一些廉价的电脑零件组了一台廉价的电脑来确保博主确实有能力完成这件事）</p><p>最后，博主如愿以偿地获得了人生当中第一台组装电脑（实际上是组的第二台，但这台才有实际意义），装好系统下好游戏后，这个梦想也就实现了。GTA5启动！</p><p>博主的搞机之路没有因此而停止，反而发展成了对用电子垃圾拼装出高性价比组装机的兴趣，至此之后，我纵横图吧、闲鱼等各种硬件交流区。</p><p><u>图吧</u>百科介绍：<a href="https://baike.baidu.com/item/%E5%9B%BE%E6%8B%89%E4%B8%81%E5%90%A7/2345154?fr=aladdin">https://baike.baidu.com/item/%E5%9B%BE%E6%8B%89%E4%B8%81%E5%90%A7/2345154?fr=aladdin</a>  正如百科所说，图吧是一个<a href="https://baike.baidu.com/item/DIY">DIY</a>爱好者聚集地，是乐意为计算机技术献出一份力量的图钉们温暖的港湾。</p><p>无论是 X79 洋垃圾、771硬改775 还是 用鞋盒当机箱，都是垃圾佬们（图吧用户对自己的戏称）对计算机性价比的极致追求和热爱。</p><p>博主也是一刷贴吧就是几个小时，根本停不下来，也捡过一些垃圾（稍后放图）</p><p>无奈，博主之后遇到了学业和兴趣的两难选择，最终只能暂时搁置兴趣，并在一年前完成了最后一台电脑的组装。</p><p>但就在新冠肺炎导致的超长寒假期间，我在沉迷GTA5时，思考到底怎么样才能开发出如此神作，由此，博主对编程的兴趣被激发了。我于是翻出了几个月前在网上买的一本编程书，找出了它的配套教学视频，开始自学起来。由于有计算机硬件的基础，博主在编程时也无需考虑计算机的硬件条件。半个月后，我开发了人生第一个控制台程序（没有自己的界面，只能依托在控制台上运行）。不久之后，学校开学了，面临即将到来的中考，我想用新学的编程技能开发一个学习软件（即E-test），但时间实在紧迫，直到中考结束，我还没开启这个项目。</p><p>中考后的暑假，我完成了E-test项目，并着眼于博主未来的人生道路，AI对当时的我来说是一个奇妙的东西，我认为它在不久后会代替人类，那制造AI的人应该不容易被替代吧（对于这个问题，我在之前的博文已经讨论过了），再我又感觉它非常NB，于是就选择了学习AI。</p><p>直到去年过年的时候，我才开始较高效率的对AI的学习，到此刻，我对AI的学习也才算刚入了门，揭示智能背后的原理是一个快乐的过程，而原理却是普通且平凡的。</p><hr><h1 id="祝TCJ搞机两周年快乐！"><a href="#祝TCJ搞机两周年快乐！" class="headerlink" title="祝TCJ搞机两周年快乐！"></a>祝TCJ搞机两周年快乐！<img src="/images/gj2/1.gif" alt="1"></h1><h3 id="纪念"><a href="#纪念" class="headerlink" title="纪念"></a>纪念</h3><h6 id="第一次组装尝试："><a href="#第一次组装尝试：" class="headerlink" title="第一次组装尝试："></a>第一次组装尝试：</h6><p><img src="/images/gj2/2.png" alt="2"></p><p>联想G41主板+亮机U</p><p><img src="/images/gj2/3.png" alt="3"></p><p>TT额定400w电源 + G41 + 亮机U + 希捷250g机械盘 + 2GB圣创雷克ddr3内存条 （WIN 7系统）成功！</p><h6 id="第二次攒机："><a href="#第二次攒机：" class="headerlink" title="第二次攒机："></a>第二次攒机：</h6><p><img src="/images/gj2/4.png" alt="4"></p><p>超频三散热器</p><p><img src="/images/gj2/5.png" alt="5"></p><p>i5–3570 一代神U + 身后的技嘉b75m小板</p><p><img src="/images/gj2/6.png" alt="6"></p><p>七彩虹 gtx 760 2G显卡</p><p><img src="/images/gj2/7.png" alt="7"><img src="/images/gj2/8.png" alt="8"></p><p>技嘉 b75m + i5–3570 + 七彩虹 gtx 760 2G + 10GB运存（8G威刚 + 2G圣创雷克）+ 500G希捷机械盘（WIN 10 系统）</p><p><img src="/images/gj2/9.png" alt="9"></p><p><img src="/images/gj2/10.png" alt="10"></p><h6 id="捡垃圾："><a href="#捡垃圾：" class="headerlink" title="捡垃圾："></a>捡垃圾：</h6><h6 id=""><a href="#" class="headerlink" title=""></a><img src="/images/gj2/11.png" alt="11"></h6><p><img src="/images/gj2/12.png" alt="12"></p><p>60元收来的迪兰恒进RX480 4G 战神满血版</p><h6 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/images/gj2/13.png" alt="13"></h6><p>“妖”板！</p><p><img src="/images/gj2/14.png" alt="14"></p><p>一些用来测试硬件的软件</p><p><img src="/images/gj2/15.png" alt="15"></p><p>怎么能少了这个？<img src="/images/gj2/16.png" alt="16"></p><p>用“垃圾”拼的机子</p><p><img src="/images/gj2/17.png" alt="17"></p><p>用来挂游戏。</p><h6 id="硬件工作台："><a href="#硬件工作台：" class="headerlink" title="硬件工作台："></a>硬件工作台：</h6><p><img src="/images/gj2/18.png" alt="18"></p><p>有点乱，去年寒假搭起来的。主要有热风枪、预热台（还有上面的芯片）等。</p><p><img src="/images/gj2/19.png" alt="19"></p><p>燃烧的芯片！</p><h6 id="软件工作台："><a href="#软件工作台：" class="headerlink" title="软件工作台："></a>软件工作台：</h6><p><img src="/images/gj2/20.png" alt="20"></p><p>平时写博客、娱乐、敲代码等都是在这进行的。<img src="/images/gj2/21.png" alt="21"></p><p>方便的数码收纳袋，装一些系统安装U盘等</p><h6 id="博主的床头文学：（当时为了提升计算机技术和揭示计算机原理买的）"><a href="#博主的床头文学：（当时为了提升计算机技术和揭示计算机原理买的）" class="headerlink" title="博主的床头文学：（当时为了提升计算机技术和揭示计算机原理买的）"></a>博主的床头文学：（当时为了提升计算机技术和揭示计算机原理买的）</h6><p><img src="/images/gj2/22.png" alt="22"><img src="/images/gj2/23.png" alt="23"><img src="/images/gj2/24.png" alt="24"><img src="/images/gj2/25.png" alt="25"></p><p>当时买的时候都是激情满满，现在却很少再有时间翻开来看了。</p><p><img src="/images/gj2/26.png" alt="26"></p><p>希望在新的一年能看完这本书和完成有趣的项目。</p><p>把往事整理成博文，和你分享其中的快乐。</p><hr><h2 id="规定：2月15日为TCJ的搞机节！"><a href="#规定：2月15日为TCJ的搞机节！" class="headerlink" title="规定：2月15日为TCJ的搞机节！"></a>规定：2月15日为TCJ的搞机节！</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>开源E-test项目(学习软件)</title>
    <link href="/2021/04/03/2021-04-03-%E5%BC%80%E6%BA%90E-test%E9%A1%B9%E7%9B%AE/"/>
    <url>/2021/04/03/2021-04-03-%E5%BC%80%E6%BA%90E-test%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="开源E-test项目-学习软件"><a href="#开源E-test项目-学习软件" class="headerlink" title="开源E-test项目(学习软件)"></a>开源E-test项目(学习软件)</h2><h3 id="本项目由博主去年暑假完成，最近在整理的时候发现有值得学习的地方，特此开源交流。"><a href="#本项目由博主去年暑假完成，最近在整理的时候发现有值得学习的地方，特此开源交流。" class="headerlink" title="本项目由博主去年暑假完成，最近在整理的时候发现有值得学习的地方，特此开源交流。"></a>本项目由博主去年暑假完成，最近在整理的时候发现有值得学习的地方，特此开源交流。</h3><p>在这里自顶向下介绍一下这个软件吧（从软件到源码）：为避免长篇大论，涉及的源码仅是部分，感兴趣的同学可自行去github上下载。github库链接：<a href="https://github.com/TianChaojie155038/E-test">https://github.com/TianChaojie155038/E-test</a></p><h5 id="此软件目前在Windows-7-10-上均能正常运行。"><a href="#此软件目前在Windows-7-10-上均能正常运行。" class="headerlink" title="此软件目前在Windows 7/10 上均能正常运行。"></a>此软件目前在Windows 7/10 上均能正常运行。</h5><h5 id="此软件是用Java开发的一个GUI程序，需要网络并需要配置数据库。"><a href="#此软件是用Java开发的一个GUI程序，需要网络并需要配置数据库。" class="headerlink" title="此软件是用Java开发的一个GUI程序，需要网络并需要配置数据库。"></a>此软件是用Java开发的一个GUI程序，需要网络并需要配置数据库。</h5><h5 id="开发此软件的目的是加强对英语单词的记忆。"><a href="#开发此软件的目的是加强对英语单词的记忆。" class="headerlink" title="开发此软件的目的是加强对英语单词的记忆。"></a>开发此软件的目的是加强对英语单词的记忆。</h5><p><img src="/images/E-test/1.png" alt="1"></p><p>如示意图所示，这是程序的主界面，包括注册账号和登录两个功能，需要联网。</p><p><img src="/images/E-test/2.png" alt="2"></p><p>这是一个简陋的注册账号界面，单击左上角即可返回主界面。</p><p><img src="/images/E-test/3.png" alt="3"></p><p>对应源码部分（部分）：<img src="/images/E-test/4.png" alt="4"></p><p>主界面涉及的主要是Java中的标签和文本框一类，还有一些基本的布尔逻辑、账号加密等。（共1471行代码）</p><hr><p>注册成功后会跳转到提示界面，我们去登录看看！！！</p><p><img src="/images/E-test/5.png" alt="5"></p><p>这是博主在开发时用来测试的一个账号，由于程序有设计缺陷，像******************这样的账号无法正常使用程序。左列有4个简单的基本功能：词库—添加—删除—测试。左上角有一个返回键，单击可返回到用户主界面，左下角有一个程序的活动日志，用于记录程序的一些情况。</p><p><img src="/images/E-test/6.png" alt="6"></p><p>添加功能：右侧键入要加入到词库的单词和对应的中文后，Add按钮会取消锁定，单击即可加入。</p><p><img src="/images/E-test/7.png" alt="7"></p><p>删除功能：在右侧文本框中键入要删除的单词，单击DELETE即可从词库中删除。</p><p><img src="/images/E-test/8.png" alt="8"></p><p>词库：可看到当前在词库中的所有单词。</p><p><img src="/images/E-test/9.png" alt="9"></p><p>正上方的放大镜：根据单词中所包含的字母可搜索到对应单词。</p><p><img src="/images/E-test/10.png" alt="10"></p><p>标签功能：方便管理单词。</p><p><img src="/images/E-test/11.png" alt="11"></p><p>测试（核心功能）：选择对应的标签和模式进行单词测试，默认从词库中抽词。</p><p><img src="/images/E-test/12.png" alt="12"></p><p>对应源码部分（部分）：<img src="/images/E-test/13.png" alt="13"></p><p>测试功能的部分源码，将要测试的单词和对应的中文放入两个集合，索引一一对应。</p><p><img src="/images/E-test/14.png" alt="14"></p><p>Add按钮的检测释放部分源码，对键入的值的转换。用户界面的源码共有1856行。</p><hr><p><img src="/images/E-test/15.png" alt="15"></p><p>如图所示为整个项目的源文件结构，全项目共有4085行源码。</p><hr><p>博主当时对编程有强烈的兴趣，所以在去年暑假期间就连续爆肝十几天开发了此软件，并想要用它来帮助博主应付高中的开学考试。但是实用效果并不是那么好，且软件存在部分bug，随即该项目便被关停了，最近博主在整理相关资料时，发现源码中有值得学习的地方，便把它开源在github上了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记：第二版】用Java实现基于BP算法的多层前馈神经网络</title>
    <link href="/2021/03/28/%E7%94%A8Java%E5%AE%9E%E7%8E%B0%E7%BB%8F%E5%85%B8BP%E7%AE%97%E6%B3%95(%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0)/"/>
    <url>/2021/03/28/%E7%94%A8Java%E5%AE%9E%E7%8E%B0%E7%BB%8F%E5%85%B8BP%E7%AE%97%E6%B3%95(%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0)/</url>
    
    <content type="html"><![CDATA[<h2 id="【学习笔记：第二版】用Java实现基于BP算法的多层前馈神经网络"><a href="#【学习笔记：第二版】用Java实现基于BP算法的多层前馈神经网络" class="headerlink" title="【学习笔记：第二版】用Java实现基于BP算法的多层前馈神经网络"></a>【学习笔记：第二版】用Java实现基于BP算法的多层前馈神经网络</h2><p>本文部分内容参考《数学之美》、《机器学习》，如有侵权请联系作者删除。</p><p><strong>第二版笔记更新</strong>：优化了 <u>Java 实现</u> 并用 <u>神经网络完成西瓜分类任务</u>，增加了 <u>累积BP算法的实现</u>，第二版笔记删除了 <u>神经网络原理的推导</u>，是因为此处的重点是用Java编写神经网络，后续博主有时间会在其它博文中记录之</p><p>更新时间（2021–5–15 13:27）</p><p>传播搞机的快乐，分享计算机知识！—TCJ</p><p>在进入正文之前，我们先来讨论一下人工智能。</p><p><img src="/images/BP/1.png" alt="1"></p><h5 id="首先，人工智能是什么？对于这个问题，一直以来就有不同的答案。"><a href="#首先，人工智能是什么？对于这个问题，一直以来就有不同的答案。" class="headerlink" title="首先，人工智能是什么？对于这个问题，一直以来就有不同的答案。"></a>首先，人工智能是什么？对于这个问题，一直以来就有不同的答案。</h5><p>一般人认为AI是即将统治地球的机器人。（博主之前也是这么认为的）</p><p>对AI有些许了解的人认为这是可以自主学习的程序。</p><p>在本文中，我们对AI有如下定义：AI是智能的机器或程序。</p><p>那么智能又是什么呢？我们暂时可以理解为生物智能。那么AI就是拥有接近或超过人类智慧的机器或程序。</p><h5 id="其次，既然AI这么神奇，那它的原理是什么？（博主在刚接触到AI类新闻时对此既好奇又害怕-⁄-⁄•⁄ω⁄•⁄-⁄-）"><a href="#其次，既然AI这么神奇，那它的原理是什么？（博主在刚接触到AI类新闻时对此既好奇又害怕-⁄-⁄•⁄ω⁄•⁄-⁄-）" class="headerlink" title="其次，既然AI这么神奇，那它的原理是什么？（博主在刚接触到AI类新闻时对此既好奇又害怕(⁄ ⁄•⁄ω⁄•⁄ ⁄)）"></a>其次，既然AI这么神奇，那它的原理是什么？（博主在刚接触到AI类新闻时对此既好奇又害怕(⁄ ⁄•⁄ω⁄•⁄ ⁄)）</h5><p>在上个世纪五十年代到七十年代初，AI处于“推理期”，那时人们认为只要赋予机器逻辑推理能力，机器就具有智能。而且也取得了巨大成就，例如“逻辑理论家”程序在1963年证明了著名数学家罗素和怀特海的名著《数学原理》中的全部52条定理，更有意思的是，定理2.85甚至比罗素和怀特海证明得更巧妙。该程序作者 A.Newell 和 H.Simon 也因这方面的工作获得了1975年<u>图灵奖</u>。</p><h6 id="来自秒懂百科：图灵奖对获奖条件要求极高，评奖程序极严，一般每年仅授予一名计算机科学家。图灵奖是计算机领域的国际最高奖项，被誉为“计算机界的诺贝尔奖”。"><a href="#来自秒懂百科：图灵奖对获奖条件要求极高，评奖程序极严，一般每年仅授予一名计算机科学家。图灵奖是计算机领域的国际最高奖项，被誉为“计算机界的诺贝尔奖”。" class="headerlink" title="来自秒懂百科：图灵奖对获奖条件要求极高，评奖程序极严，一般每年仅授予一名计算机科学家。图灵奖是计算机领域的国际最高奖项，被誉为“计算机界的诺贝尔奖”。"></a>来自秒懂百科：图灵奖对获奖条件要求极高，评奖程序极严，一般每年仅授予一名计算机科学家。图灵奖是计算机领域的国际最高奖项，被誉为“计算机界的<a href="https://baike.baidu.com/item/%E8%AF%BA%E8%B4%9D%E5%B0%94%E5%A5%96/187878">诺贝尔奖</a>”<strong>。</strong></h6><p>然而，随着AI的向前发展，人们逐渐认识到仅具有逻辑推理能力的机器无法达到所谓的人工智能。</p><p>这时就有人提出了要让机器获得知识。所以AI也就从二十世纪七十年代中期顺势进入了“知识期”。</p><p>在这一时期，又取得了不少成果。大量的专家系统问世，简单地说，就是人把知识进行数学转换，再赋予给计算机。发展到后期，人们认识到有些知识进行总结是相当困难的，需要耗费大量人力。</p><p>于是，又有人提出要让机器自己学得这些知识。也就是机器学习，在人工智能界，认为机器学习是该领域最能体现智能的一个分支。（本文标题中的神经网络是机器学习的一个分支）</p><h5 id="人工智能的意义又是什么？"><a href="#人工智能的意义又是什么？" class="headerlink" title="人工智能的意义又是什么？"></a>人工智能的意义又是什么？</h5><p>聪明的小伙伴可能已经发现了，人工智能可以使人类从繁重的体力和脑力劳动中解放出来，例如：无人驾驶（这也是博主当初想要学习AI的一个因素，说到底就是因为懒啦）。</p><p>但也有人认为人工智能的发展最终会毁灭人类并统治地球。对于这个问题，博主有幸从<strong>吴军博士的《数学之美》</strong>一书中获得了一些启发。在该书中，吴军博士指出，计算机的能力有数学上的边界，在最根本的层面上限制了人工智能的能力，这一边界与技术无关，仅取决于数学本身的限制。</p><h6 id="补充说明：计算机可以看成是在数学计算的基础上工作的。"><a href="#补充说明：计算机可以看成是在数学计算的基础上工作的。" class="headerlink" title="补充说明：计算机可以看成是在数学计算的基础上工作的。"></a>补充说明：计算机可以看成是在数学计算的基础上工作的。</h6><p>数学模型将各种形形色色的实际问题变成了计算问题，但有一个前提是这些问题都是可以计算的数学问题。</p><p>上个世纪，希尔伯特划定了有解数学问题的边界。如图所示</p><p><img src="/images/BP/2.png" alt="2"></p><p>因此，我们可以知道，有答案的数学问题，不过是世界上所有问题中很少的一部分。想具体了解的同学可以点击<a href="https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9%E7%AC%AC%E5%8D%81%E9%97%AE%E9%A2%98/19128770?fr=aladdin">https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9%E7%AC%AC%E5%8D%81%E9%97%AE%E9%A2%98/19128770?fr=aladdin</a> （希尔伯特的第十问题）</p><p>而人工智能能够解决的问题又是有答案问题的很小一部分。如图所示</p><p><img src="/images/BP/3.png" alt="3"></p><p>所以，我们就不要再做杞人忧天的事了，而是应该更多的关注如何有效利用人工智能来解决人的问题。</p><hr><p>以下是Java实现</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">neural_networks</span> </span>&#123;<span class="hljs-comment">//神经网络类（多层前馈神经网络）</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span>[] nums = &#123;<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>&#125;; <span class="hljs-comment">//神经网络基本属性:神经网络层数及各层神经元数(此处已指定)</span><br><br>    <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">networks</span> </span>&#123;<span class="hljs-comment">//神经网络数据结构类（内部类）</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span>[][][] Q_Values = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[<span class="hljs-number">3</span>][<span class="hljs-number">5</span>][<span class="hljs-number">5</span>];<span class="hljs-comment">//权重值数组</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span>[][] Yu_Values = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[<span class="hljs-number">3</span>][<span class="hljs-number">5</span>];<span class="hljs-comment">//阈值数组</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span>[][] IntputValues = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[<span class="hljs-number">4</span>][<span class="hljs-number">5</span>];<span class="hljs-comment">//输入值数组</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span>[][] OutputValues = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[<span class="hljs-number">4</span>][<span class="hljs-number">5</span>];<span class="hljs-comment">//输出值数组</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span>[][] TDValues = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[<span class="hljs-number">3</span>][<span class="hljs-number">5</span>];<span class="hljs-comment">//梯度项数组</span><br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">networks</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//无参构造方法（此处初始化一个4层神经网络,每层神经元数分别为:2、5、4、3）</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.length; i++) &#123;<span class="hljs-comment">//从第一层隐层开始</span><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; nums[i]; j++) &#123;<span class="hljs-comment">//初始化阈值</span><br>                    Yu_Values[i - <span class="hljs-number">1</span>][j] = Math.random();<span class="hljs-comment">//添加随机值范围（0~1）</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; nums[i - <span class="hljs-number">1</span>]; k++) &#123;<span class="hljs-comment">//单个神经元下的权重</span><br>                        Q_Values[i - <span class="hljs-number">1</span>][j][k] = Math.random();<span class="hljs-comment">//添加随机值范围（0~1）</span><br>                    &#125;<br><br>                &#125;<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-comment">//i是层数、j是神经元数、k是权重数(下同)</span><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">double</span> Qvalue)</span> </span>&#123;<span class="hljs-comment">//set方法（权重值更新）</span><br><br>            Q_Values[i][j][k] = Qvalue;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> Value, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-comment">//set方法(阈值、输入值、输出值、梯度项值更新)</span><br>            <span class="hljs-keyword">if</span> (k == <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//阈值更新</span><br>                Yu_Values[i][j] = Value;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (k == <span class="hljs-number">1</span>) &#123;<span class="hljs-comment">//输入值更新</span><br>                IntputValues[i][j] = Value;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (k == <span class="hljs-number">2</span>) &#123;<span class="hljs-comment">//输出值更新</span><br>                OutputValues[i][j] = Value;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//梯度项更新</span><br>                TDValues[i][j] = Value;<br><br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getIntputValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的输入</span><br>            <span class="hljs-keyword">return</span> IntputValues[i][j];<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getOutputValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的输出</span><br>            <span class="hljs-keyword">return</span> OutputValues[i][j];<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getTDValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的梯度项值</span><br>            <span class="hljs-keyword">return</span> TDValues[i][j];<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getQ_Value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-comment">//获取神经元的权值</span><br>            <span class="hljs-keyword">return</span> Q_Values[i][j][k];<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getYu_Value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的阈值</span><br>            <span class="hljs-keyword">return</span> Yu_Values[i][j];<br><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">neuron</span> </span>&#123;<span class="hljs-comment">//神经元类（内部类）</span><br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">neuron</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//无参构造方法</span><br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getIntputValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的输入值</span><br>            <span class="hljs-keyword">return</span> networks.getIntputValue(i, j);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getOutputValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的输出值</span><br>            <span class="hljs-keyword">return</span> networks.getOutputValue(i, j);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getTDValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的梯度项值</span><br>            <span class="hljs-keyword">return</span> networks.getTDValue(i, j);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getQ_Value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-comment">//获取神经元的权值</span><br>            <span class="hljs-keyword">return</span> networks.getQ_Value(i, j, k);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getYu_Value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的阈值</span><br>            <span class="hljs-keyword">return</span> networks.getYu_Value(i, j);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">double</span> Qvalue)</span> </span>&#123;<span class="hljs-comment">//set方法（权重值更新）</span><br>            networks.set(i, j, k, Qvalue);<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> Value, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-comment">//set方法(阈值、输入值、输出值、梯度项值更新)</span><br>            networks.set(i, j, Value, k);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countOutputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">double</span> IntputValue)</span> </span>&#123;<span class="hljs-comment">//计算神经元的输出值(此处使用sigmiod函数作为激活函数)需要被重写</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countTDValueandSave</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//计算神经元的梯度项值，需要被重写</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countIntputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算神经元的输入值，需要被重写</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewYu</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新阈值，需要被重写</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewQuan</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新权重，需要被重写</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">hiddenneuron</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">neuron</span> </span>&#123;<span class="hljs-comment">//隐结点类（内部类）</span><br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">hiddenneuron</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//无参构造方法</span><br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countTDValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算隐层神经元的梯度项值</span><br>            <span class="hljs-keyword">double</span> d = <span class="hljs-number">0</span>;<span class="hljs-comment">//ΣΩg</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; nums[i]; k++) &#123;<span class="hljs-comment">//权重和下一层的梯度项</span><br>                d += <span class="hljs-keyword">super</span>.getQ_Value(i, k, j) * <span class="hljs-keyword">super</span>.getTDValue(i, k);<br>            &#125;<br>            <span class="hljs-keyword">double</span> b = <span class="hljs-keyword">super</span>.getIntputValue(i, j);<br>            <span class="hljs-keyword">double</span> c = b * (b - <span class="hljs-number">1</span>) * d;<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, c, <span class="hljs-number">3</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countIntputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算隐层神经元的输入值</span><br>            <span class="hljs-keyword">double</span> b = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; nums[i - <span class="hljs-number">1</span>]; k++) &#123;<br>                b += <span class="hljs-keyword">super</span>.getOutputValue(i - <span class="hljs-number">1</span>, k) * <span class="hljs-keyword">super</span>.getQ_Value(i - <span class="hljs-number">1</span>, j, k);<br><br>            &#125;<br>            <span class="hljs-keyword">super</span>.set(i, j, b, <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countOutputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算神经元的输出值(此处使用sigmiod函数作为激活函数)</span><br>            <span class="hljs-keyword">double</span> b = <span class="hljs-keyword">super</span>.getIntputValue(i, j);<br>            <span class="hljs-keyword">double</span> yu = <span class="hljs-keyword">super</span>.getYu_Value(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-number">1</span> / (<span class="hljs-number">1</span> + Math.pow(Math.E, yu - b));<br>            <span class="hljs-keyword">super</span>.set(i, j, c, <span class="hljs-number">2</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewYu</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新阈值</span><br>            <span class="hljs-keyword">double</span> e = <span class="hljs-keyword">super</span>.getTDValue(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-keyword">super</span>.getYu_Value(i - <span class="hljs-number">1</span>, j) + rate * e;<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, c, <span class="hljs-number">0</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewQuan</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新权重</span><br>            <span class="hljs-keyword">double</span> e = <span class="hljs-keyword">super</span>.getTDValue(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-keyword">super</span>.getQ_Value(i - <span class="hljs-number">1</span>, j, k) - rate * e * networks.getOutputValue(i - <span class="hljs-number">1</span>, k);<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, k, c);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">outneuron</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">neuron</span> </span>&#123;<span class="hljs-comment">//输出结点类（内部类）</span><br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">outneuron</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//无参构造方法</span><br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countTDValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> y)</span> </span>&#123;<span class="hljs-comment">//计算输出层神经元的梯度项值</span><br>            <span class="hljs-keyword">double</span> out = <span class="hljs-keyword">super</span>.getOutputValue(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = out * (<span class="hljs-number">1</span> - out) * (out - y);<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, c, <span class="hljs-number">3</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countIntputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算输出层神经元的输入值</span><br>            <span class="hljs-keyword">double</span> b = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; nums[i - <span class="hljs-number">1</span>]; k++) &#123;<br>                b += <span class="hljs-keyword">super</span>.getOutputValue(i - <span class="hljs-number">1</span>, k) * <span class="hljs-keyword">super</span>.getQ_Value(i - <span class="hljs-number">1</span>, j, k);<br>            &#125;<br>            <span class="hljs-keyword">super</span>.set(i, j, b, <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">countOutputValueandSave</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//计算神经元的输出值(此处使用sigmiod函数作为激活函数)</span><br>            <span class="hljs-keyword">double</span> b = <span class="hljs-keyword">super</span>.getIntputValue(i, j);<br>            <span class="hljs-keyword">double</span> yu = <span class="hljs-keyword">super</span>.getYu_Value(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-number">1.0</span> / (<span class="hljs-number">1</span> + Math.pow(Math.E, yu - b));<br>            <span class="hljs-keyword">super</span>.set(i, j, c, <span class="hljs-number">2</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br><br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewYu</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新阈值</span><br>            <span class="hljs-keyword">double</span> g = <span class="hljs-keyword">super</span>.getTDValue(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-keyword">super</span>.getYu_Value(i - <span class="hljs-number">1</span>, j) + rate * g;<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, c, <span class="hljs-number">0</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">renewQuan</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">double</span> rate)</span> </span>&#123;<span class="hljs-comment">//更新权重</span><br>            <span class="hljs-keyword">double</span> g = <span class="hljs-keyword">super</span>.getTDValue(i - <span class="hljs-number">1</span>, j);<br>            <span class="hljs-keyword">double</span> c = <span class="hljs-keyword">super</span>.getQ_Value(i - <span class="hljs-number">1</span>, j, k) - rate * g * <span class="hljs-keyword">super</span>.getOutputValue(i - <span class="hljs-number">1</span>, k);<br>            <span class="hljs-keyword">super</span>.set(i - <span class="hljs-number">1</span>, j, k, c);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getOutputValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<span class="hljs-comment">//获取神经元的输出值</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.getOutputValue(i, j);<br><br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 训练集:</span><br><span class="hljs-comment">         * (正例，都是好瓜①密度 0.697 含糖率 0.460  ②密度 0.774 含糖率0.376  ③密度 0.634 含糖率 0.264</span><br><span class="hljs-comment">         * ④密度 0.608 含糖率 0.318 ⑤密度 0.556 含糖率 0.215)</span><br><span class="hljs-comment">         * (反例①密度 0.666 含糖率 0.091 ②密度 0.243 含糖率 0.267 ③密度 0.245 含糖率 0.057</span><br><span class="hljs-comment">         * ④密度 0.343 含糖率 0.099 ⑤密度 0.639 含糖率 0.161 ⑥密度 0.657 含糖率 0.198</span><br><span class="hljs-comment">         * )</span><br><span class="hljs-comment">         * 测试集:</span><br><span class="hljs-comment">         * (正例①密度 0.481 含糖率 0.149 ②密度 0.437 含糖率 0.211 ③密度 0.403 含糖率 0.237)</span><br><span class="hljs-comment">         * (反例①密度 0.593 含糖率 0.042 ②密度 0.719 含糖率 0.103 ④密度 0.360 含糖率 0.370)</span><br><span class="hljs-comment">         */</span><br>        List traindatas = <span class="hljs-keyword">new</span> ArrayList();<br>        List traindatass = <span class="hljs-keyword">new</span> ArrayList();<br>        List zresult = <span class="hljs-keyword">new</span> ArrayList();<br>        traindatas.add(<span class="hljs-number">0.697</span>);<br>        traindatass.add(<span class="hljs-number">0.460</span>);<br>        traindatas.add(<span class="hljs-number">0.774</span>);<br>        traindatass.add(<span class="hljs-number">0.376</span>);<br>        traindatas.add(<span class="hljs-number">0.634</span>);<br>        traindatass.add(<span class="hljs-number">0.264</span>);<br>        traindatas.add(<span class="hljs-number">0.608</span>);<br>        traindatass.add(<span class="hljs-number">0.318</span>);<br>        traindatas.add(<span class="hljs-number">0.556</span>);<br>        traindatass.add(<span class="hljs-number">0.215</span>);<br>        <span class="hljs-comment">//正例↑</span><br>        traindatas.add(<span class="hljs-number">0.666</span>);<br>        traindatass.add(<span class="hljs-number">0.091</span>);<br>        traindatas.add(<span class="hljs-number">0.243</span>);<br>        traindatass.add(<span class="hljs-number">0.267</span>);<br>        traindatas.add(<span class="hljs-number">0.245</span>);<br>        traindatass.add(<span class="hljs-number">0.057</span>);<br>        traindatas.add(<span class="hljs-number">0.343</span>);<br>        traindatass.add(<span class="hljs-number">0.099</span>);<br>        traindatas.add(<span class="hljs-number">0.639</span>);<br>        traindatass.add(<span class="hljs-number">0.161</span>);<br>        traindatas.add(<span class="hljs-number">0.657</span>);<br>        traindatass.add(<span class="hljs-number">0.198</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">1</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        zresult.add(<span class="hljs-number">0</span>);<br>        List ftraindatas = <span class="hljs-keyword">new</span> ArrayList();<br>        List ftraindatass = <span class="hljs-keyword">new</span> ArrayList();<br>        List fzresult = <span class="hljs-keyword">new</span> ArrayList();<br>        ftraindatas.add(<span class="hljs-number">0.481</span>);<br>        ftraindatass.add(<span class="hljs-number">0.149</span>);<br>        ftraindatas.add(<span class="hljs-number">0.437</span>);<br>        ftraindatass.add(<span class="hljs-number">0.211</span>);<br>        ftraindatas.add(<span class="hljs-number">0.593</span>);<br>        ftraindatass.add(<span class="hljs-number">0.042</span>);<br>        ftraindatas.add(<span class="hljs-number">0.719</span>);<br>        ftraindatass.add(<span class="hljs-number">0.103</span>);<br>        ftraindatas.add(<span class="hljs-number">0.403</span>);<br>        ftraindatass.add(<span class="hljs-number">0.237</span>);<br>        ftraindatas.add(<span class="hljs-number">0.360</span>);<br>        ftraindatass.add(<span class="hljs-number">0.370</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">1</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        fzresult.add(<span class="hljs-number">0</span>);<br>        networks n = <span class="hljs-keyword">new</span> networks();<span class="hljs-comment">//new 一个神经网络</span><br>        neuron ne = <span class="hljs-keyword">new</span> neuron();<span class="hljs-comment">//new 一个神经元</span><br>        hiddenneuron hne = <span class="hljs-keyword">new</span> hiddenneuron();<span class="hljs-comment">//new一个隐结点对象</span><br>        outneuron one = <span class="hljs-keyword">new</span> outneuron();<span class="hljs-comment">//new一个输出结点对象</span><br>        <span class="hljs-keyword">double</span> rate = <span class="hljs-number">0.1</span>;<span class="hljs-comment">//学习率</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1500</span>; i++) &#123;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; traindatas.size(); j++) &#123;<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, (<span class="hljs-keyword">double</span>) traindatas.get(j), <span class="hljs-number">1</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, (<span class="hljs-keyword">double</span>) traindatas.get(j), <span class="hljs-number">2</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, (<span class="hljs-keyword">double</span>) traindatass.get(j), <span class="hljs-number">1</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, (<span class="hljs-keyword">double</span>) traindatass.get(j), <span class="hljs-number">2</span>);<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt; nums.length - <span class="hljs-number">1</span>; k++) &#123;<span class="hljs-comment">//循环遍历隐结点:计算输入输出值</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[k]; z++) &#123;<br>                        hne.countIntputValueandSave(k, z);<br>                        hne.countOutputValueandSave(k, z);<br>                    &#125;<br><br>                &#125;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; nums[nums.length - <span class="hljs-number">1</span>]; k++) &#123;<span class="hljs-comment">//遍历输出结点</span><br>                    <span class="hljs-keyword">int</span> c = nums.length - <span class="hljs-number">1</span>;<br>                    one.countIntputValueandSave(c, k);<br>                    one.countOutputValueandSave(c, k);<br>                    one.countTDValueandSave(c, k, Double.valueOf(zresult.get(j).toString()));<br>                    one.renewYu(c, k, rate);<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[c - <span class="hljs-number">1</span>]; z++) &#123;<br>                        one.renewQuan(c, k, z, rate);<br>                    &#125;<br><br>                &#125;<br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt; nums.length - <span class="hljs-number">1</span>; k++) &#123;<span class="hljs-comment">//计算隐结点梯度项</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[nums.length - <span class="hljs-number">1</span> - k]; z++) &#123;<br>                        hne.countTDValueandSave(nums.length - <span class="hljs-number">1</span> - k, z);<br>                        hne.renewYu(nums.length - <span class="hljs-number">1</span> - k, z, rate);<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> t = <span class="hljs-number">0</span>; t &lt; nums[nums.length - <span class="hljs-number">2</span> - k]; t++) &#123;<br>                            hne.renewQuan(nums.length - <span class="hljs-number">1</span> - k, z, t, rate);<br>                        &#125;<br><br>                    &#125;<br><br>                &#125;<br><br>            &#125;<br>            <span class="hljs-comment">//以下是测试</span><br>            <span class="hljs-keyword">int</span> cw = <span class="hljs-number">0</span>;<span class="hljs-comment">//记录错误示例个数</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; ftraindatas.size(); j++) &#123;<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, (<span class="hljs-keyword">double</span>) ftraindatas.get(j), <span class="hljs-number">1</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, (<span class="hljs-keyword">double</span>) ftraindatas.get(j), <span class="hljs-number">2</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, (<span class="hljs-keyword">double</span>) ftraindatass.get(j), <span class="hljs-number">1</span>);<br>                networks.set(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, (<span class="hljs-keyword">double</span>) ftraindatass.get(j), <span class="hljs-number">2</span>);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt; nums.length - <span class="hljs-number">1</span>; k++) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[k]; z++) &#123;<br>                        hne.countIntputValueandSave(k, z);<br>                        hne.countOutputValueandSave(k, z);<br>                    &#125;<br><br>                &#125;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">1</span>; k++) &#123;<br>                    <span class="hljs-keyword">int</span> c = nums.length - <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">double</span> averageout = <span class="hljs-number">0</span>;<span class="hljs-comment">//神经网络有多个输出，在这里取所有输出的平均值</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[c]; z++) &#123;<br>                        one.countIntputValueandSave(c, z);<br>                        one.countOutputValueandSave(c, z);<br>                    &#125;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = <span class="hljs-number">0</span>; z &lt; nums[c]; z++) &#123;<br>                        averageout += one.getOutputValue(c, z);<br>                    &#125;<br>                    averageout /= (<span class="hljs-keyword">double</span>) nums[c];<br>                    <span class="hljs-keyword">if</span> (averageout &gt; <span class="hljs-number">0.5</span> &amp; Double.valueOf(fzresult.get(j).toString()) == <span class="hljs-number">0.0</span>) &#123;<br>                        System.out.println(<span class="hljs-string">&quot;第&quot;</span> + (j + <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;个示例分类错误&quot;</span>);<br>                        cw++;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (averageout &lt; <span class="hljs-number">0.5</span> &amp; Double.valueOf(fzresult.get(j).toString()) == <span class="hljs-number">1.0</span>) &#123;<br>                        System.out.println(<span class="hljs-string">&quot;第&quot;</span> + (j + <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;个示例分类错误&quot;</span>);<br>                        cw++;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (averageout == <span class="hljs-number">0.5</span>) &#123;<br>                        System.out.println(<span class="hljs-string">&quot;第&quot;</span> + (j + <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;个示例分类错误&quot;</span>);<br>                        cw++;<br>                    &#125;<br><br>                &#125;<br><br>            &#125;<br>            System.out.println(<span class="hljs-string">&quot;错误率:&quot;</span> + cw / (<span class="hljs-keyword">double</span>) fzresult.size());<br><br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>对于累积BP算法，我们可以先求出多个误差，再进行平均。此方法有时可以免去误差抵销的现象。</p><p>例如：你辛辛苦苦算了一节课的数学题，最后发现是条件看错了。所以，舍得花时间先看清条件是必要的。</p><p>如果神经网络的模型非常复杂（即有超多个地方需要计算），每算一次需要花费巨大的时间，那你可不想看到被抵销的现象吧，用累积BP算法就可以节省大量时间，提高学习效率。</p><p>说白了，标准BP算法就是累积BP算法每次训练样例数取1时的特例，一般情况下，模型越复杂，每次训练样例数取得越多。</p><p>可以说，博主写Java代码1年多以来，在今天终于领略到了它的一个重要编程思想，即 类的封装  。</p><p>在这份代码中，博主用了数组来存储神经网络中的基本属性（阈值、权重等），其实我一开始是热衷于用集合来完成的。但是出现了奇葩的错误，当我发现这个错误时，是在最后测试阶段，此时若要改动存储方式岂不是半天都白干了，Java的类思想让我省去了很多时间。</p><p>训练及测试结果：</p><p><img src="/images/BP/4.png" alt="4"></p><p>不知道是因为任务太简单了还是神经网络的学习能力太强了，在几十次训练后就达到了100%的精度</p><p>我更愿相信它是过拟合了</p><p>用到的神经元模型：<img src="/images/BP/5.png" alt="5"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>T-Ti项目进度记录</title>
    <link href="/2021/03/14/2021-03-14-T-Ti%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/03/14/2021-03-14-T-Ti%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="T-Ti项目进度记录"><a href="#T-Ti项目进度记录" class="headerlink" title="T-Ti项目进度记录"></a>T-Ti项目进度记录</h2><p>稚晖君的充电宝屏幕到啦！</p><p><img src="/images/T-Tip/1.png" alt="1"></p><p>下大周继续肝项目！</p><p>2021—3—14 15：23</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>为什么人 ······ ？| 人为什么 ······ ？</title>
    <link href="/2021/03/14/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%20%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%20%EF%BC%9F%20%E4%BA%BA%E4%B8%BA%E4%BB%80%E4%B9%88%20%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%20%EF%BC%9F/"/>
    <url>/2021/03/14/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%20%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%20%EF%BC%9F%20%E4%BA%BA%E4%B8%BA%E4%BB%80%E4%B9%88%20%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%20%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么人-······-？-人为什么-······-？"><a href="#为什么人-······-？-人为什么-······-？" class="headerlink" title="为什么人 ······ ？| 人为什么 ······ ？"></a>为什么人 <strong>······</strong> ？| 人为什么 <strong>······</strong> ？</h2><p>秉着 “君子曰：学不可以矣。” 的观点，博主在一次语文课结束后，顺便浏览了学习提示。开头第一句便是：理想的社会是什么样的，人应该以怎么样的姿态立于社会，对此古代的先哲从未停止探索的脚步 。</p><p>这句话好家伙啊，一下就激起了博主的共鸣 。为什么呢？</p><p>博主曾经也思考过这个问题，但是却找不到一个能说服自己的答案，最后精神几经颓废。不过，博主最后决心要继续学习并解决这个问题 。</p><h6 id="百家争鸣与稷下学官"><a href="#百家争鸣与稷下学官" class="headerlink" title="百家争鸣与稷下学官"></a>百家争鸣与稷下学官</h6><p>在中国古代具有精神奠基意义的思想大师中，影响最大的，是以孔子、孟子为代表的儒家和以老子、庄子为代表的道家 。他们有不同的目光和不同的路途 。</p><p>中国文化在稷下学官获得了一种聚集和整合，蔚为壮观 。中国文化在人类精神的奠基时代能够涌现出百家争鸣的景象本来已经令人叹为观止，而且，在当时的信息传播条件下，所谓 “ 争鸣 ” ，大多是后人把各种学说拼合在一起，很难进距离地争论起来 。出乎意料，他们真的拥有了一个会合的场所，“ 百家争鸣 ” 变成了事实 。</p><p><u>先来说说老子，</u>他觉得最伟大的学说就是自然 。自然是什么？说清楚了又不自然了 。所以他说 “道可道，非常道；名可名，非常名 ” 。本来，他连这几个字也不愿意写下来 。因为一写 “ 道 ”，就必须规范 “ 道 ” 、限定 “ 道 ” ，而 “ 道 ”是不可被规范和限定的；一写 “ 名 ”，又必须为了某种 “ 名 ” 而进入归类，不归类就不成其为 “ 名 ”，但一归类就不再是它独立的本身 。那么，如果完全不碰 “ 道 ” 、不碰 “ 名 ”，你还能写什么呢？</p><p>那就把笔丢弃吧。把种种言辞和概念，都驱逐吧 。</p><p>老子最后消失了，但他留给大地的，是一个能够深思熟虑 、看透万象的民族 。</p><p><u>老子在路上，孔子也在路上 。</u>在路上，一个人摆脱了固定的环境，陷入了广阔无比的陌生和未知，但生命的缰绳却仍然掌握在自己手上 。由此，你会比以往任何时候都更感到生命的脆弱和强大，一种高阶的诗情也由此产生 。他在外面行走了整整十四年，而且年纪已经不轻，从五十五岁，走到六十八岁 。这十四年的行走，有一些学生陪着，他沿路讲的话，被学生们记下了 。后人批评孔子保守、倒退都是多余的，这就像批评泰山，为什么南坡承受了那么多阳光，还要让北坡去承受那么多风雪 。可期待的回答只有一个：“ 因为我是泰山 。” 伟大的孔子自知伟大，因此从来没有对南坡的阳光感到得意，也没有对北坡的风雪感到耻辱 。孔子对我们最大的吸引力，是一种迷人的  “ 生命情调 ”——至善、宽厚、优雅、快乐，而且健康 。他以自己的苦旅，让君子充满魅力 。</p><p>再回到几千年后的今天，每个人都在自己选的路上，只不过大多是为了生计，再也难看到像他们一般的人物 。博主也将会选择一个正确的道路，在通往 AI 算法工程师的道路上砥砺前行 。</p><p>今天就说到这吧 ~ ~ 本文将会持续更新 ~ ~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>机器学习偏好（学习笔记）</title>
    <link href="/2021/03/13/2021-03-12-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%81%8F%E5%A5%BD/"/>
    <url>/2021/03/13/2021-03-12-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%81%8F%E5%A5%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="机器学习偏好（学习笔记）"><a href="#机器学习偏好（学习笔记）" class="headerlink" title="机器学习偏好（学习笔记）"></a>机器学习偏好（学习笔记）</h2><p>通过学习得到的模型对应了假设空间中的一个假设。但如果有多个假设符合训练集，却必须要选择一个模型作为输出，那该怎么办？这时，学习算法本身的偏好就起到关键的作用。学习算法可能喜欢尽可能特殊的模型、也可能喜欢尽可能一般的模型。机器学习算法在学习过程中对某种类型假设的偏好，称为 “ 归纳偏好 ”（inductive bias），或简称为 “ 偏好 ” 。</p><p><strong>旁注：</strong>尽可能特殊指 “ 适用情形尽可能少 ”；尽可能一般指 “ 适用情形尽可能多 ” 。</p><p>任何一个有效的机器学习算法必有其归纳偏好，否则就跟胡猜差不多啦。</p><p>归纳偏好可看作学习算法自身在一个可能很庞大的假设空间中对假设进行选择的启发式或 “ 价值观 ” 。“ 奥卡姆剃刀 ”（Occam’s razor）是一种常用的、自然科学研究中最基本的原则（它可以引导算法确立 “ 正确的 ” 偏好 ），即 “ 若有多个假设与观察一致，则选最简单的那个 ” 。</p><p>然而，奥卡姆剃刀并非唯一可行的原则，需注意到，奥卡姆剃刀本身存在不同的诠释，使用奥卡姆剃刀并不平凡 。例如：对于两个假设来说，哪一个更简单这个问题并不简单，需借助其他机制才能解决。</p><p>在具体的现实问题中，算法的归纳偏好是否与问题本身匹配，大多数时候直接决定了算法能否取得好 的性能 。</p><p>对于一个学习算法 a 来说，若它在某些问题上比学习算法 b 好，则必然存在另一些问题，在那里 b 比 a 好 。有趣的是，这个结论对任何算法均成立 。也就是说，两个算法的总误差应该是相等的。</p><p>让我们来证明一下：（前提：假设样本空间<em>X</em>和假设空间 <em>H</em>都是离散的 。令 P（h|<em>X</em>，a）代表算法 a 基于训练数据 <em>X</em>产生假设 h 的概率，再令 f 代表我们希望学习的真实目标函数 。Ⅱ(·)是指示函数，若 · 为真则为 1，否则取值 0 。）</p><p>此处举一个二分类问题，真实目标函数可以是任何函数 <em>X</em>→{0，1}，函数空间为 {0,1}^|<em>X</em>|，对所有可能的 f 按均匀分布对误差求和，有：</p><p><img src="/images/machine_learning_hobby/1.png" alt="1"></p><p><strong>旁注：</strong>若 f 均匀分布，则有一半的 f 对 x 的预测与 h(x) 不一致</p><p>上述式子最终等于下面这个式子</p><p><img src="/images/machine_learning_hobby/2.png" alt="2"></p><p>上式表示总误差与学习算法无关！也就是：</p><p><img src="/images/machine_learning_hobby/3.png" alt="3"></p><p>这就是著名的 “ 没有免费的午餐 ” 定理 。（此处证明已简化）</p><p>那既然算法的期望性能都一样，那还学什么，直接猜算了</p><p>注意，此定理的前提是所有问题都同等重要 。但是具体问题一般不是同等重要的，也就是要对症下药。此定理告诉我们：脱离具体问题而去谈论学习算法的性能是没有意义的。学习算法的偏好决定了它在某个问题上的性能 。</p><p>有趣的是，此定理还可证明生活当中的一些问题：例如：有一个在厂房旁的房子，晚上会发出机器运转的声音，问这个房子好还是不好？</p><p>答：显然，这可以从经济学的 “ 成本 ” 和  NFL 定理（没有免费午餐定理的简称）共同来说明这个道理，对一个在该厂房上班且不在乎噪音的人来说，他会认为这个房子好，他的成本几乎为零；对于一个喜欢宁静却不在乎上班路程的人，他会认为这个房子简直遭透了！他的成本是巨大的 ；而对于一个即不在乎噪音也不在乎距离的人来说，他无论选择什么，成本都是一样的 。</p><p>参考资料——《机器学习》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>谈谈健康</title>
    <link href="/2021/02/26/2021-02-25-%E8%B0%88%E8%B0%88%E5%81%A5%E5%BA%B7/"/>
    <url>/2021/02/26/2021-02-25-%E8%B0%88%E8%B0%88%E5%81%A5%E5%BA%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="谈谈健康"><a href="#谈谈健康" class="headerlink" title="谈谈健康"></a>谈谈健康</h2><h6 id="个体健康与社会发展"><a href="#个体健康与社会发展" class="headerlink" title="个体健康与社会发展"></a>个体健康与社会发展</h6><p>健康对每个人的生活都极为重要，获得并保持健康是所有人共同的愿望。</p><p>对于个体来说，健康不仅是没有疾病或虚弱，而且是身体、心理和社会适应的完好状态。</p><p>对于社会来说，健康是社会进步、经济发展的基础条件，实现国民健康长寿是国家富强、民族振兴的重要标志。</p><h6 id="生活方式对健康的影响"><a href="#生活方式对健康的影响" class="headerlink" title="生活方式对健康的影响"></a>生活方式对健康的影响</h6><p>生活方式是影响青少年健康的重要因素，其具体外显主要包括饮食、运动、睡眠、娱乐、消费、社会交往等。</p><p>随着经济发展和人们生活水平提高，我国和世界上许多国家人口的健康问题发生明显改变，疾病谱和死因谱已经由传染性疾病为主转向慢性非传染性疾病为主，这种转变与人们的生活方式改变密切相关。</p><p><img src="/images/jk/1.png" alt="1"></p><p>导致这些疾病的不健康生活方式的养成可以追溯到青少年时期。</p><p>结核病是青年人容易发生的一种慢性病和缓发的传染病，当人体免疫力下降时，更容易被传染，而人体的免疫力受到饮食、睡眠、运动和压力等生活方式的影响。</p><h6 id="怎样培养健康行为"><a href="#怎样培养健康行为" class="headerlink" title="怎样培养健康行为"></a>怎样培养健康行为</h6><p>高中学生应根据 “ 知一信一行 ” 的模式来培养自身的健康行为。首先，要积极学习和掌握增进健康的知识与技能;其次，要通过主动思考来树立正确的健康信念，不断提高健康意识和健康管理的能力;最后，要坚持实施有益于健康的行为，养成健康文明的生活方式和行为习惯。例如，为了预防新型冠状病毒肺炎，应通过可靠的途径获得有关传染源、传播途径、易感人群和临床表现等方面的科学、准确的信息，提高防范意识，主动采取佩戴口罩、加强手卫生、避免人群聚集等应对措施，如有相关症状应及时向父母或教师报告，并坚决杜绝滥食野生动物的陋习，提倡文明健康、绿色环保的生活方式。</p><p><img src="/images/jk/2.png" alt="2"></p><h6 id="倡导健康文明生活方式"><a href="#倡导健康文明生活方式" class="headerlink" title="倡导健康文明生活方式"></a>倡导健康文明生活方式</h6><p>青少年健康文明生活方式包括以下四个方面：合理膳食、良好的生活习惯和行为、心理平衡和科学锻炼。</p><p><img src="/images/jk/3.png" alt="3"></p><p><img src="/images/jk/4.png" alt="4"></p><p><img src="/images/jk/5.png" alt="5"></p><p><img src="/images/jk/6.png" alt="6"></p><h6 id="保护视力，防控近视"><a href="#保护视力，防控近视" class="headerlink" title="保护视力，防控近视"></a>保护视力，防控近视</h6><p>近视的负面影响有：</p><p>视力低下，辨认远方物体、精细能力下降，易疲劳；</p><p>长期戴眼镜，给学习、生活和运动带来不便；</p><p>职业受限：很多职业（如飞行专业等）对视力有一定的要求；</p><p>引发其他眼部疾病，甚至致盲；</p><p>高度近视会导致眼球突出，眼睑松弛，并具有较大的遗传性。</p><p>预防近视：</p><p>●选择良好的视觉环境。选择使用与自己身高相匹配的学习桌椅，在采光良好、照明充足的环境中读写，尽量充分使用自然光，夜间学习时宜同时开启台灯和屋顶灯</p><p>●保持良好的读写习惯。如保持正确读写姿势，避免长时间近距离用眼，不在躺卧、吃饭时，或者走路、晃动的车厢内，或者光线暗弱及阳光直射等情况下看书或看电子产品。读写连续用眼时间超过40分钟时，可采用远眺或做眼保健操等方式休息眼睛</p><p>●增加户外活动和锻炼，保证自己每天接触户外自然光的时间在60分钟以上，已患近视的同学应进一步增加户外活动时间。坚持做好眼保健操。<br>●确保睡眠充足、营养均衡。充足的睡眠可以让眼睛得到充分的休息，高中学生每天睡眠时间应不少于8小时。在条件允许的情况下，多吃鱼类等有益于视力健康的食物，少吃糖，少喝含糖饮料，保持营养均衡。</p><p>思考 <strong>·</strong> 讨论<br>有的同学配了近视眼镜后只是在看黑板时才偶尔佩戴，还有的同学常借用他人的眼镜临时佩戴。他们认为，戴近视眼镜时间越长，近视的度数就会越高。你怎么看待这样的行为和观点?</p><p>博主认为戴近视眼镜时间越长，一般是不会导致度数越来越高的。</p><p>解释一下：人眼中有一个组分叫晶状体，当看近的物体时，晶状体会弯曲，如果持续时间较长，晶状体会难以恢复成正常曲度，导致晶状体不灵敏，造成近视。眼镜就像眼外的晶状体，帮助折射光线，并不会对人眼内的晶状体造成进一步伤害。所以上述观点错误。</p><h6 id="营养素"><a href="#营养素" class="headerlink" title="营养素"></a>营养素</h6><p><img src="/images/jk/7.png" alt="7"></p><p>机体摄入的营养素无论是不足还是过量，都可能引起生理功能失调或身体健康受损。</p><p><img src="/images/jk/8.png" alt="8"></p><h6 id="中国学龄儿童膳食指南"><a href="#中国学龄儿童膳食指南" class="headerlink" title="中国学龄儿童膳食指南"></a>中国学龄儿童膳食指南</h6><p>●认识食物，学习烹饪，提高营养科学素养</p><p>●三餐合理，规律进餐，培养健康饮食行为</p><p>●合理选择零食，足量饮水，不喝含糖饮料，禁止饮酒</p><p>●不偏食节食，不暴饮暴食，保持适宜体重增长</p><p>●保证每天至少活动60分钟，增加户外活动时间</p><p><img src="/images/jk/9.png" alt="9"></p><p><u>知识链接</u></p><p>食物相克是真的吗？</p><p>“虾与水果相克”的传言认为虾中的五价砷会与水果中的维C发生化学反应，生成三氧化二砷（砒霜），从而导致食物中毒。经过研究：当虾中的砷含量达到食品安全规定的最高限量，并且 1 次吃 40 千克虾才能达到砒霜中毒的最低剂量 50 mg，但在被毒死之前可能已经被撑死了。进一步的研究表明：食物相克的说法是没有科学依据的。</p><h6 id="合理营养与维持适宜体重"><a href="#合理营养与维持适宜体重" class="headerlink" title="合理营养与维持适宜体重"></a>合理营养与维持适宜体重</h6><p>能量的摄入和消耗保持相对平衡是维持健康体重的关键因素。如果进食过多或活动不足，就会有多余的能量在体内以脂肪的形式积存下来，并导致超重或肥胖；如果膳食提供的能量长期不足则会引起体重过低或消瘦，并可能出现容易疲劳、免疫力下降等症状，影响正常的学习和生活。</p><h6 id="如何维持适宜体重"><a href="#如何维持适宜体重" class="headerlink" title="如何维持适宜体重"></a>如何维持适宜体重</h6><p>营养不良和过度消瘦者应在保证能量摄入充足的基础上，增加鱼、禽、蛋、瘦肉、奶和豆制品等优质蛋白质食物的摄入，经常食用奶及奶制品，每天吃新鲜的蔬菜和水果；保证一日三餐，纠正偏食挑食和过度节食等不健康饮食行为，并保持适宜的体育活动。</p><h6 id="体育锻炼与营养摄入"><a href="#体育锻炼与营养摄入" class="headerlink" title="体育锻炼与营养摄入"></a>体育锻炼与营养摄入</h6><p>在进行较大强度的体育锻炼或比赛时，机体能量消耗明显提高，蛋白质的分解与合成代谢加强，水、维生索和矿物质的消耗与丢失增加，从而需要通过饮食来补充机体所需的能量和营养素，以保障身体健康。因此，营养和饮食安排应注意以下几点：</p><p>●在平衡膳食的基础上，增加肉、蛋、奶、大豆及其制品等优质蛋白质的摄入，但要避免“多吃肉，不吃主食”的饮食方式。科学研究表明，摄入过多的鱼，畜、禽肉和鸡蛋会增加心血管疾病、肥胖和某些肿瘤的发生风险。</p><p>●食用足量新鲜蔬菜和水果以补充矿物质和维生素。</p><p>●在较炎热天气或长时间运动时采用“少量多次”的原则及时补水。</p><p>●根据锻炼项目，可有针对性地安排饮食。例如，进行力量锻炼可适当补充肉类、奶类和豆制品:进行耐力性运动时要多吃主食，增加体内的糖原储备。</p><p>●运动与就餐时间要合理安排。正餐后应休息1 ~ 2小时再进行剧烈运动，运动后1小时左右再进食较为适宜。</p><h6 id="合理饮水"><a href="#合理饮水" class="headerlink" title="合理饮水"></a>合理饮水</h6><p>正常情况下，人体每日摄入和排出的水量应保持动态平衡，日均需水量约为2500毫升，可通过进食或饮水等多种途径摄入。白开水是经过煮沸之后的饮用水，是满足人体健康最经济实用的首选饮用水。14 ~ 17岁男生每天应饮水1400毫升，女生每天应饮水1200毫升。在炎热或出汗较多时应增加饮水量。高中学生宜采用少量多次的方法及时补水，不应口渴后再喝，建议每个课间喝100 ~ 200毫升水。此外，还要特别注意饮水温度应适宜，过凉的水和饮料会刺激胃和食管，不利于健康。随着经济发展和人们生活水平提高，矿泉水、纯净水以及各种饮料丰富多样，但很多饮料添加了糖及其他成分，过量饮用会对健康造成危害。例如，大量饮用含糖量高的饮料可能会增加龋齿、肥胖的患病风险。特别是大量饮用碳酸饮料还可能导致骨骼发有缓慢、骨质疏松等问题。因此，应不喝或少喝饮料，更不能以仗料代替水。体育活动时机体对水的消耗大大增加，为避免运动中脱水，可采用以下方式补充水分。</p><p><img src="/images/jk/10.png" alt="10"></p><p>运动会使机体消耗更多能量，丢失大量矿物质，因此参加长时间、大负荷的体育活动时，可以在水中适当添加糖类和矿物质，从而在补充水分的同时迅速补充能量和矿物质，市场上销售的运动饮料大多具有类似的成分和功能。</p><h6 id="空气污染对健康的影响"><a href="#空气污染对健康的影响" class="headerlink" title="空气污染对健康的影响"></a>空气污染对健康的影响</h6><p>人类生产、生活排出的污染物会扩散到大气中，当污染物的数量过多，大气不能自我净化时便构成污染，直接或间接地影响人体健康。过量暴露在这些污染物中常常会引发疾病、损害健康，严重时还会导致死亡。大气污染还会导致温室效应、臭氧层破坏、酸雨频度增加、气候变化等后果，对人类命运共同体的可持续发展产生不利影响。AQI是一种定量、客观地反映和评价空气质量状况的指标。通过了解自己生活地区的空气质量状况，对于加强环保意识和更好地生活、学习与锻炼将会发挥积极的作用。</p><p><img src="/images/jk/11.png" alt="11"></p><p><u>知识链接</u></p><p>雾霾天不宜进行室外段鸾和活动，应尽量减少户外停留时间。</p><h6 id="土壤污染对健康的影响"><a href="#土壤污染对健康的影响" class="headerlink" title="土壤污染对健康的影响"></a>土壤污染对健康的影响</h6><p>土壤中的有害物质可以通过 “ 土壤→植物→人体 ” 或 “ 土壤→水→人体 ” 间接被人体吸收，超过一定数量就会导致人体中毒、患病，甚至死亡。 </p><h6 id="水体污染对健康的影响"><a href="#水体污染对健康的影响" class="headerlink" title="水体污染对健康的影响"></a>水体污染对健康的影响</h6><p>人类活动排放的污染物，如工业废水、生活污水、农业污水或其他废弃物或化学物质进入水体，如果数量过多，超过了水体的自净能力，就会造成水质恶化，破坏水源地的生态环境。饮用或接触被污染的水，或食用被水污染的食物，会危害人体健康，引起人体中毒甚至死亡。</p><h6 id="噪声污染对健康的影响"><a href="#噪声污染对健康的影响" class="headerlink" title="噪声污染对健康的影响"></a>噪声污染对健康的影响</h6><p>噪声污染是发生在周围环境中对人的生活、工作有影响的各种声音，包括交通噪声，工业噪声，建筑施工、交通运输和社会生活中所产生的干扰周围生活环境的声音。较强的噪声可以导致听觉、心血管、神经、消化等系统发生各种疾病及代谢功能紊乱。人类生活的空间充满各种噪声，并且随着工业的发展，噪声的种类、强度与日俱增，成为人类公害之一。 噪声污染影响到人们生活和工作的各个领域，对人们的正常生活和休息造成干扰，危害人体健康。</p><p><u>知识窗</u></p><p>进行体育锻炼时，应尽量避免在人群喧闹、噪声较大的区域，以便于集中精力，提高锻炼的效果，也可以选择自己喜欢的优美音乐作为锻炼的背景音乐。</p><h6 id="爱护环境，从自身做起"><a href="#爱护环境，从自身做起" class="headerlink" title="爱护环境，从自身做起"></a>爱护环境，从自身做起</h6><p>人类的命运与环境紧密相关，环境污染与破坏会给人类健康带来严重的危害。从长远来看，破坏生态平衡还会制约经济和社会的可持续发展，甚至威胁到人类的生存。因此，应坚持人与自然和谐共处，形成绿色发展方式和生活方式。</p><h6 id="高温环境下锻炼"><a href="#高温环境下锻炼" class="headerlink" title="高温环境下锻炼"></a>高温环境下锻炼</h6><p>在高温环境中长时间剧烈运动，可能会出现运动能力下降、脱水中暑等情况。为了避免中暑等情况的发生，在高温环境下进行体育锻炼应注意以下几点:<br>●尽量避免在下午最热的时段进行剧烈运动<br>●穿着合适、透气、浅色、宽松的衣服<br>●注意补充水分、糖类和矿物质，饮用含维生素C的饮料，如柑橘汁等<br>●适时在阴凉通风的地方休息;<br>●如果有头晕、恶心、出冷汗等症状，应立即停止锻炼并休息</p><h6 id="寒冷环境下锻炼"><a href="#寒冷环境下锻炼" class="headerlink" title="寒冷环境下锻炼"></a>寒冷环境下锻炼</h6><p>坚持在寒冷环境中运动，可以提高人体对寒冷的适应能力和耐寒能力，有利于身体各系统机能的进一步加强。但寒冷环境也可能对人体造成负面影响，如导致体温过低或冻伤等。为了避免这种情况发生，应注意以下几点:<br>●注意保暖，穿适宜的衣裤、鞋袜，戴手套、帽子<br>●运动前做充分的准备活动，使体温升高，让机体逐渐适应寒冷的环境<br>●根据对外界温度的感觉，适时增减衣服<br>●避免让冷空气直接刺激咽喉而引起呼吸道感染、喉痛和咳嗽等<br>●气温过低时，注意对手、脚、耳郭、鼻尖护，以防冻伤<br>●锻炼结束之后，要及时擦汗并换上干衣服，以防感冒</p><h6 id="增进心理健康"><a href="#增进心理健康" class="headerlink" title="增进心理健康"></a>增进心理健康</h6><p>健康的心理是生活、学习、工作和交往的保证，心理健康对每个高中生的成长和发展都有重要的影响，积极参加体育活动不仅有助于身体健康，也是促进心理健康有效的途径之一。 通过提高自我认识能力，合理地调控情绪，将有助于同学们增进心理健康，消除成长中的烦恼和困惑。</p><h6 id="发展调控情绪能力"><a href="#发展调控情绪能力" class="headerlink" title="发展调控情绪能力"></a>发展调控情绪能力</h6><p>情绪的好与坏将直接影响着人的身心健康。积极的情绪能促进机体的正常活动，使思维敏捷，并有利于保持健康的人格和良好的人际关系。在日常学习和生活中，由于各类事件的发生，难免会产生不良情绪，比如愤怒、胆怯、恐惧、焦虑等。如果不能及时调书这些情绪，它们会对健康产生负面影响。调节情绪的能力是指能认识自己的情绪，运用适当方法尽量把消极情绪逐渐调整为积极情绪，使之不对自己和他人的身心健康造成不良影响。</p><p><img src="/images/jk/12.png" alt="12"></p><h6 id="提高人际交往技能，增强社会适应能力"><a href="#提高人际交往技能，增强社会适应能力" class="headerlink" title="提高人际交往技能，增强社会适应能力"></a>提高人际交往技能，增强社会适应能力</h6><p>人际交往是指能以积极的方式与他人交往，建立和保持友谊，与家人相互沟通。人际交往技能是保持良好心理状态并获得社会支持的重要能力之一，对促进心理健康和良好的社会适应能力十分重要。</p><p>高中学生在与同学交往时，会共同面对成长的变化、学业的压力，彼此之间既有竞争，又有合作。在这种情况下，应遵循真诚、自然、尊重、理解、宽容、助人的交往原则。在具体实践中，还可运用以下这些方法:</p><p>1.真诚微笑，自然大方，给人留下良好的第一印象。<br>2.换位思考，宽以待人，妥善处理人际矛盾。<br>3.积极沟通交流，主动维持人际交往。<br>4.多参加集体活动，结识更多朋友，发现和欣赏他人的优点。<br>5.遇到棘手的问题时，学会沟通、协商，或者向可信赖的成年人请教。</p><p>参考资料——《体育与健康》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>大数据真不错（趣评）</title>
    <link href="/2021/02/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9C%9F%E4%B8%8D%E9%94%99%EF%BC%88%E8%B6%A3%E8%AF%84%EF%BC%89/"/>
    <url>/2021/02/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9C%9F%E4%B8%8D%E9%94%99%EF%BC%88%E8%B6%A3%E8%AF%84%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="大数据真不错（趣评）"><a href="#大数据真不错（趣评）" class="headerlink" title="大数据真不错（趣评）"></a>大数据真不错（趣评）</h2><p>最近博主闲得无聊，不知不觉打开淘宝竟然发现一个有趣的东西——淘宝的推荐系统。</p><p>先来说一下它是怎么工作的：通过算法分析用户喜欢什么，再把那些分析出来用户会喜欢的东西推荐给用户。</p><p>如今是互联网时代，大家都知道在网上有各种奇葩的东西，但却很难找到那些能引起自己共鸣的。</p><p>来看推荐系统选出的第一位选手：<img src="/images/qp/1.png" alt="1"></p><p><em>趣评：</em></p><p>（一号网友）没人会带着一块开发板上街，不知道的以为是<img src="/images/qp/2.png" alt="2"></p><p>（二号网友）绑个开发板在手上？<img src="/images/qp/3.png" alt="3"></p><p><em>趣评裁判：</em>看这位二号网友一脸疑惑的表情，小编你是真<img src="/images/qp/4.png" alt="4">啊</p><p>（三号网友）我以为是彩六里的爆破<img src="/images/qp/5.png" alt="5"></p><p>第二位选手：<img src="/images/qp/6.png" alt="6"></p><p><em>趣评裁判：</em>这个还是比较正面的，不错<img src="/images/qp/7.png" alt="7"></p><p>第三位选手：<img src="/images/qp/8.png" alt="8"></p><p><em>趣评裁判：</em>小编你真的确定现在学生会用这个东西？<img src="/images/qp/9.png" alt="9"></p><p>第四位选手：<img src="/images/qp/10.png" alt="10"></p><p><em>趣评裁判：</em>这是交智商税吗？<img src="/images/qp/11.png" alt="11"></p><p>第5位选手：<img src="/images/qp/12.png" alt="12"></p><p><em>趣评裁判：</em>考试作弊就别想了，这不是掩耳盗铃的事<img src="/images/qp/13.png" alt="13">？（生怕别人不知道呢<img src="/images/qp/14.png" alt="14"></p><p>）</p><p>第6位选手：<img src="/images/qp/15.png" alt="15"></p><p><em>趣评裁判：</em>(＾Ｕ＾)ノ~ＹＯ这创意<img src="/images/qp/16.png" alt="16"></p><p>第7位选手：<img src="/images/qp/17.png" alt="17"></p><p><em>趣评裁判：</em><img src="/images/qp/18.png" alt="18">学习又有伴咯！</p><p>第8位选手：<img src="/images/qp/19.png" alt="19"></p><p><em>趣评裁判：</em>搁着骗<img src="/images/qp/20.png" alt="20">呢</p><p>第9位选手：<img src="/images/qp/21.png" alt="21"></p><p><em>趣评裁判：</em>好东西，之前还不知道呢，收下了<img src="/images/qp/22.png" alt="22"></p><p>第10位选手：<img src="/images/qp/23.png" alt="23"></p><p><em>趣评裁判：</em>淘公仔你真细</p><p>第11位选手：<img src="/images/qp/24.png" alt="24"></p><p><em>趣味裁判：</em>没有做不到只有想不到啊<img src="/images/qp/25.png" alt="25"></p><p>第12位选手：<img src="/images/qp/26.png" alt="26"></p><p><em>趣评裁判：</em>又有好玩的啦<img src="/images/qp/27.png" alt="27"></p><p>第13位选手：<img src="/images/qp/28.png" alt="28"></p><p><em>趣评裁判：</em><img src="/images/qp/29.png" alt="29">你在监视我？</p><p>第14位选手：<img src="/images/qp/30.png" alt="30"></p><p><em>趣评裁判：</em>你是火星来的吗？<img src="/images/qp/31.gif" alt="31"></p><p>好了，以上就是本次趣评的全部内容了，下次继续——<em>趣评裁判</em>（以上内容纯属娱乐）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>机器学习基本知识（学习笔记）</title>
    <link href="/2021/02/25/2021-02-25-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%EF%BC%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
    <url>/2021/02/25/2021-02-25-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%EF%BC%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="机器学习基本知识（学习笔记）"><a href="#机器学习基本知识（学习笔记）" class="headerlink" title="机器学习基本知识（学习笔记）"></a>机器学习基本知识（学习笔记）</h2><p>临近中午，我和奶奶两人走在田壤中央的小道上——通往菜地。温和的春风吹来，迎面拍打在我的身上，嗯，最近天气不错，地里泥土湿不了我的鞋！来到菠菜地旁，弯下腰，捏住菜茎，再往上一提，就出来了。<img src="/images/machine_learning_basic/1.png" alt="1"></p><p>大家发现上图有什么异样的东西吗，没错，当我在辛勤的劳动时，竟碰到了一只正在冬眠的蟾蜍。</p><p>进一步看，我们发现这里涉及很多基于经验做出的预判。例如：对于天气和湿鞋的判断、对一只蟾蜍的判断 <strong>······</strong> 可以看出，我们能够做出有效的预判，是因为我们已经积累了许多经验，而通过对经验的利用，就能对新情况做出有效的决策。既然博主是计算机爱好者，那当然想要计算机来帮助我们，这样就可以从繁重的脑力劳动中解脱出来了。本文的主题——机器学习就是致力于研究如何通过计算的手段，利用经验来改善系统自身的性能的一门学科。</p><p>机器学习所研究的主要内容，是关于在计算机上从数据中产生“ 模型 ”（model）的算法，即“ 学习算法 ”（learning algorithm）。有了学习算法，我们把经验数据提供给它，它就能基于这些数据产生模型；在面对新的情况时，模型会给我们提供相应的判断。所以，我们也可以说机器学习是研究关于“学习算法”的学问。我们可以用“ 模型 ”泛指从数据中学得的结果。</p><h5 id="旁注：【Mitchell-，1997】给出了一个更形式化的定义：假设用P来评估计算机程序在某任务类T上的性能，若一个程序通过经验-E-在-T-中任务上获得了性能改善，则我们就说关于-T-和P，该程序对-E进行了学习。（经验-E-、任务-T-和性能度量-P-的定义范围非常宽广，这些被用来构建机器学习算法。）"><a href="#旁注：【Mitchell-，1997】给出了一个更形式化的定义：假设用P来评估计算机程序在某任务类T上的性能，若一个程序通过经验-E-在-T-中任务上获得了性能改善，则我们就说关于-T-和P，该程序对-E进行了学习。（经验-E-、任务-T-和性能度量-P-的定义范围非常宽广，这些被用来构建机器学习算法。）" class="headerlink" title="旁注：【Mitchell ，1997】给出了一个更形式化的定义：假设用P来评估计算机程序在某任务类T上的性能，若一个程序通过经验 E 在 T 中任务上获得了性能改善，则我们就说关于 T 和P，该程序对 E进行了学习。（经验 E 、任务 T 和性能度量 P 的定义范围非常宽广，这些被用来构建机器学习算法。）"></a><u>旁注：</u>【Mitchell ，1997】给出了一个更形式化的定义：假设用P来评估计算机程序在某任务类T上的性能，若一个程序通过经验 E 在 T 中任务上获得了性能改善，则我们就说关于 T 和P，该程序对 E进行了学习。（经验 E 、任务 T 和性能度量 P 的定义范围非常宽广，这些被用来构建机器学习算法。）</h5><h4 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h4><p>数据集（data set）：一组记录的集合，其中每条记录是关于一个事件或对象的描述，称为一个“ 示例 ”（instance）或“ 样本 ”（sample）。事件或对象在某方面的表现或性质称为“ 属性 ”（attribute）或“ 特征 ”（feature）；属性上的值被称为“ 属性值 ”（attribute value）。选定属性张成的空间被称为“ 属性空间 ”（attribute space）、“ 样本空间 ”（sample space）或“ 输入空间 ”。由于空间中的每一个点对应一个坐标向量，因此我们也把一个示例称为一个“ 特征向量 ”（feature vector）</p><h5 id="旁注：-有时整个数据集亦称一个样本。"><a href="#旁注：-有时整个数据集亦称一个样本。" class="headerlink" title="**旁注：**有时整个数据集亦称一个样本。"></a>**<u>旁注：</u>**有时整个数据集亦称一个样本。</h5><p><strong><u>例：</u>有一个数据集 D = {(色泽 = 暗淡；表面 = 圆润)，(色泽 = 暗淡；表面 = 褶皱)}，这里有两个“ 示例 ”或“ 样本 ”。每个“ 样本 ”都有两个“ 属性 ”或“ 特征 ”，它们有对应的属性值。且每个“ 示例 ”都是二维空间上的一个点，点对应了一组向量，称为“ 特征向量 ”。</strong></p><p>一般地，令 D = {x1，x2，···，xm}表示包含m个特征向量的数据集，每个向量的长度为d，即xi = (xi1；xi2；···；xid)是 d 维样本空间 X 中的一个向量， xi∈X，其中 xij 是向量 xi 在第 j 个特征上的取值（即属性值），d 称为样本 xi 的“ 维数 ”（dimensionality）。</p><p>从数据中学得“ 模型 ”的过程称为“ 学习 ”（learning）或“ 训练 ”（training），该过程通过执行某个学习算法来完成。模型亦称“ 假设 ”（hypothesis），因为它对应了关于数据的某种潜在规律。潜在规律可称为“ 真相 ”或“ 真实 ”（ground–truth）,模型也可称为“ 学习器 ”（leaener），可看作学习算法在给定数据和参数空间上的实例化。</p><h5 id="旁注：学习算法通常有参数需设置，使用不同的参数值和训练数据，将产生不同的结果。"><a href="#旁注：学习算法通常有参数需设置，使用不同的参数值和训练数据，将产生不同的结果。" class="headerlink" title="旁注：学习算法通常有参数需设置，使用不同的参数值和训练数据，将产生不同的结果。"></a><u><strong>旁注：</strong></u><strong>学习算法通常有参数需设置，使用不同的参数值和训练数据，将产生不同的结果。</strong></h5><p>学习或训练用的数据集称为“ 训练集 ”（training set）（区别“ 测试集 ”（test set）测试模型用的数据集），其中每个样本称为一个“ 训练样本 ”（training sample），它们总称“ 训练数据 ”（training data）。</p><p>根据训练数据是否拥有标记信息，学习任务可大致划分为两大类：“ 监督学习 ”（supervised learning）和“ 无监督学习 ”（unsupervised learning）。这里的“监督”当然不是有人在一旁监督的意思啦！</p><p>如果要建立关于“ 预测 ”（prediction）的模型，我们需获得训练样本的“ 结果 ”信息（即上文的<u>标记信息</u>）例如：((色泽 = 暗淡；表面 = 褶皱)，蟾蜍)，“ 蟾蜍 ”就称为“ 标记 ”（label）；有了标记的示例就称为“ 样例 ”（example）。一般情况下：（xi，yi）表示第 i 个样例，其中 yi ∈ Y 是示例 xi 的标记，Y 是所有标记的集合，所以也称“ 标记空间 ”（label space）或“ 输出空间 ”。</p><p>像上面判断是否是蟾蜍的任务所预测的是离散值，此类学习任务称为“ 分类 ”（classification）；若预测的是连续值，例如判断蟾蜍的年龄，此类学习任务称为“ 回归 ”（regression）。它们都是“ 监督学习 ”。如果只有两个输出结果（是蟾蜍或不是蟾蜍），那这个任务称为“ 二分类任务 ”（binary classification），一般称其中一个类为“ 正类 ”（positive class），另一个类为“ 反类 ”（negative class）；如果要判断是蟾蜍还是泥土或是其它东西，那这个任务则称为“ 多分类任务 ”（multi-class classification）。正如上文所示，预测任务是希望通过对训练集{(x1,y1),(x2,y2),···,(xm,ym)}进行学习，建立一个从输入空间 X 到输出空间 Y 的映射 f：X→Y。对于二分类任务来说，通常令Y = {–1,+1}或{0,1}；对多分类任务，|Y| &gt;2；那回归任务就是：Y  = R，R为实数集。</p><p>如果我们已经知道了是蟾蜍，并且做了“ 聚类 ”（clustering）,将训练集中的蟾蜍分成若干组，每组称为一个“ 簇 ”（clustering），这样的学习使用的训练样本通常不拥有标记信息（所以是无监督学习），但它有助于我们了解数据内在规律。因为簇可能对应一些潜在的概念划分，例如“大蟾蜍”、“浅色蟾蜍”等。</p><p>学得的模型能成功的用在实际生活中才是机器学习的目标，模型适用于新样本的能力称为“ 泛化 ”能力</p><p>（generalization）。通常假设样本空间中全体样本遵从一个未知“ 分布 ”（distribution）<em>D</em>，我们有的样本都是独立地从这个分布上采样获得的，即“ 独立同分布 ”（independent and identically </p><p>distributed，简称 i.i.d.）。像卖油翁一样，孰能生巧；训练样本越多，越了解<em>D</em>，则模型的泛化能力越强。</p><p>参考资料——《机器学习》、《深度学习》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>显卡暴涨，这是为什么？</title>
    <link href="/2021/02/24/2021-02-24-%E6%98%BE%E5%8D%A1%E6%9A%B4%E6%B6%A8%EF%BC%8C%E8%BF%99%E6%98%AF%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <url>/2021/02/24/2021-02-24-%E6%98%BE%E5%8D%A1%E6%9A%B4%E6%B6%A8%EF%BC%8C%E8%BF%99%E6%98%AF%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="显卡暴涨，这是为什么？"><a href="#显卡暴涨，这是为什么？" class="headerlink" title="显卡暴涨，这是为什么？"></a>显卡暴涨，这是为什么？</h2><p>简单说几句，由于比特币——一种数字加密货币价格的上涨，矿工在市面上大量收购一些运算比特币挖矿算法较好的显卡——通过显卡的计算，从而获得比特币，俗称挖矿。根据经济学的说法，市场决定资源配置，导致市场上的显卡供不应求，价格持续上涨。</p><p>举个实例，<img src="/images/xk/1.png" alt="1"></p><p>这是博主一年前花了60RMB收的一张坏显卡。一年后的现在，它的价格是这样的：<img src="/images/xk/2.png" alt="2"></p><p>显卡：<img src="/images/xk/3.png" alt="3"></p><p><img src="/images/xk/4.png" alt="4"></p><p><img src="/images/xk/5.png" alt="5"></p><p><img src="/images/xk/6.png" alt="6"></p><p>游戏还是很香的！（显卡被博主用热风枪加焊了一下，暂时复活了。）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>TCJ的寒假搞机故事——iPhone X</title>
    <link href="/2021/02/24/TCJ%E7%9A%84%E5%AF%92%E5%81%87%E6%90%9E%E6%9C%BA%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94iPhone%20X/"/>
    <url>/2021/02/24/TCJ%E7%9A%84%E5%AF%92%E5%81%87%E6%90%9E%E6%9C%BA%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94iPhone%20X/</url>
    
    <content type="html"><![CDATA[<h2 id="TCJ的寒假搞机故事——iPhone-X"><a href="#TCJ的寒假搞机故事——iPhone-X" class="headerlink" title="TCJ的寒假搞机故事——iPhone X"></a>TCJ的寒假搞机故事——iPhone X</h2><p>这个事件发生在博主的第一次高中寒假期间。</p><p>“叮咚”我跑到手机面前，打开QQ，看到群友在发游戏的图片。“wow！”这不是我之前想玩的游戏吗，原来是手游，赶紧下一个玩玩。“TiMi”，这英雄真帅，拿着大斧头，看起来好厉害的样子，而且用钻石就可以买。</p><p>几个月后，来到学校，“wow，你段位是王者，这么厉害。”于是，我在小学六年级买了手机，就为了王者。</p><p>三年后，“**，这手机怎么这么卡，嗯~，据我对计算机硬件的了解，不如组装一台 iPhone X吧，应该不是很贵。”</p><p>所以，博主就在寒假开始的时候立了一个 flag—–搞台 iPhone X <strong>!</strong></p><p>打开闲鱼，发现有不少卖 iPhone X 主板的，接着往下看<img src="/images/Tx/1.png" alt="1"></p><p>oh，这不刚好吗，省得去东拼西凑了，就它了。</p><p>嗯~还差一个屏幕，<img src="/images/Tx/2.png" alt="2"></p><p>初二，手机到了，拆开包装，还挺好看的。</p><p><img src="/images/Tx/3.png" alt="3">屏幕还得等年后。</p><p>静等屏幕中。。。穿越一下，ok，到了。接下来就是去网上找换屏幕的视频了，大致流程是这样的：</p><p>拆开屏幕及其支架（此处博主由于第一次拆发生了一点小意外——屏幕和支架脱离了[害羞]）→掀开排线盖子→断开电池排线（此处一定要注意，不然容易冒火花，甚至<img src="/images/Tx/5.png" alt="5">）</p><p>→断开屏幕的显示排线和触摸排线→把前置摄像头搬到新屏上去→再扣上显示排线和触摸排线→扣上电池排线→拧上排线盖子→测试一下<img src="/images/Tx/6.png" alt="6"></p><p>**ohhhhhhhhhhhhhhhhhh !!!**→最后再合上屏幕就好了。</p><p>不过这里有一个激活锁，必须得绕过它才能用。</p><p>来到Mac OS 系统下，下载此软件（越狱用）<img src="/images/Tx/7.png" alt="7"></p><p>越狱完成后，我们就可以绕过激活锁了。</p><p>来到win10，打开绕激活软件<img src="/images/Tx/8.png" alt="8"></p><p>成功后就可以使用了，<img src="/images/Tx/9.png" alt="9"></p><p><img src="/images/Tx/10.png" alt="10"></p><p>还是挺香的，寒假第一个flag完成！<img src="/images/Tx/11.png" alt="11"></p><p>把它给妈妈后就可以顺理成章的买新手机啦！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Amdahl 定律</title>
    <link href="/2021/02/12/Amdahl%20%E5%AE%9A%E5%BE%8B/"/>
    <url>/2021/02/12/Amdahl%20%E5%AE%9A%E5%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Amdahl-定律"><a href="#Amdahl-定律" class="headerlink" title="Amdahl 定律"></a>Amdahl 定律</h2><h5 id="Amdahl-定律是由计算领域的早期先锋之一——-Gene-Amdahl-对提升系统谋一部分性能所带来的效果做出的简单却有见地的观察（Amdahl’s-law）。"><a href="#Amdahl-定律是由计算领域的早期先锋之一——-Gene-Amdahl-对提升系统谋一部分性能所带来的效果做出的简单却有见地的观察（Amdahl’s-law）。" class="headerlink" title="Amdahl 定律是由计算领域的早期先锋之一—— Gene Amdahl 对提升系统谋一部分性能所带来的效果做出的简单却有见地的观察（Amdahl’s law）。"></a>Amdahl 定律是由计算领域的早期先锋之一—— Gene Amdahl 对提升系统谋一部分性能所带来的效果做出的简单却有见地的观察（Amdahl’s law）。</h5><p>当我们对系统的某个部分加速时，其对系统整体性能的影响取决于该部分的重要性和加速程度。</p><p>假设系统执行某一任务所需时间为 T，其中某一部分所需时间与此的比例为 a，并且该部分性能提升比例为 k，即该部分原来需要的时间是 aT，而现在需要（aT）/k 。</p><p>由此得出：t = （1 – a）T + （aT）/k = T[ (1 – a) + a/k ]（新的总时间）</p><p>进一步推论：S = T / t = 1 / [( 1 – a ) + a/k]（加速比 S）</p><p>该定律的主要观点是要想显著加速整个系统，必须提升全系统中相当大的部分的速度。</p><p>举个例子：如果 60%的系统能够加速到不花时间，但净加速比将仍只有1 / 0.4 = 2.5×（系统加速比明显小于这部分的加速比）</p><p>有意思的是，Amdahl 定律除了用在加速计算机系统方面之外，还可以用在学生想要提高自己的绩点平均值等方面。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>文化是什么？</title>
    <link href="/2021/02/09/%E6%96%87%E5%8C%96%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <url>/2021/02/09/%E6%96%87%E5%8C%96%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="文化是什么？"><a href="#文化是什么？" class="headerlink" title="文化是什么？"></a>文化是什么？</h1><p>在进入“文化”这座山的山门之前，最好能够先停下步子，远远眺望一下这座山的整体气貌、高度、体量，还要端详一下竖立在山门外面的路线指示地图。山路很多、很陡，足以耗去你的大量精力。</p><p>我们早已是网络一代。而我们与远方的同龄人的差异就只剩下文化了，这也就是说，文化，是我们生命的基座。那么，它究竟是什么呢？它既不是“名校学历”，也不是“遗产知识”，更不是“历史记忆”，让我们来看下最短的文化定义：<u>文化，是一种成为习惯的精神价值和生活方式。它的最终成果，是集体人格。——余秋雨</u></p><p> 解释一下：从根源上说，我们遥远的祖先不管是择水而居还是狩猎为生，最开始都只是为了生活。当生活稳定成习惯，也就变成了生活方式，而“方式”就是文化。在一定的生活方式中，人们会逐渐处置自己与天地的关系，与家族的关系，与他人的关系，那就出现了精神价值。精神价值一出现，文化就有了主心骨。那么什么是中国文化？答案是中国人的精神价值和生活方式。精神价值和生活方式经过长时间的沉淀，一定会结晶出一个东西来。这个东西，就是集体人格。人格，指的是一个人的生命格调和行为规范。集体人格，是指一批人在生命格调和行为规范上的共同默契。这种共同默契不必订立，而是深入到意识之中，成为一种本能。</p><h4 id="集体人格的种子在神话中就播下了"><a href="#集体人格的种子在神话中就播下了" class="headerlink" title="集体人格的种子在神话中就播下了"></a>集体人格的种子在神话中就播下了</h4><p>“集体人格”是文化的最终沉淀，但是，各种“集体人格”并不是形成于近代、现代，最早的种子，可能在神话中就播下了。正是神话，使得多种文化的“集体人格”都找得到“故乡”，成了“有故乡的灵魂”。中国人的集体人格也是有“故乡”的。例如：“女娲补天”、“精卫填海”、“夸父追日”、“嫦娥奔月” 等等。每一个中国人的灵魂深处，都埋藏着这些遥远的 “故乡”。</p><p>在远古时代，神话是祖先们对于内心愿望的天真组建。这种组建的数量很大，其中如果有几种长期流传，那就证明它们契合了一个民族数代人的共同愿望。时间一长，也铸就了整个民族的性格。</p><h5 id="先说-“补天”-。主角是一位遥远而又伟大的女性：女娲。"><a href="#先说-“补天”-。主角是一位遥远而又伟大的女性：女娲。" class="headerlink" title="先说 “补天” 。主角是一位遥远而又伟大的女性：女娲。"></a>先说 “补天” 。主角是一位遥远而又伟大的女性：女娲。</h5><p>在漫长的历史过程中，世道经常会走到崩溃的边缘。要知道，看着已经濒于崩溃的世道快速灭绝而不去阻止，或落井下石，都不困难，而要练石修补则难上加难。但在华夏土地上，请相信，一定会有这样的人站出来。</p><h5 id="再说-“填海”-。"><a href="#再说-“填海”-。" class="headerlink" title="再说 “填海” 。"></a>再说 “填海” 。</h5><p>这是华夏文明的又一种主干精神。小鸟精卫衔石填海的起点是复仇，但是复仇的动机太自我，支撑不了一个无限宏伟的行为。终于，这个神话的精神体量在传播的过程中越来越大，使之全然转化成了为人间消灾的高尚动机，产生了真正的伟大。更重要的是，这个神话歌颂了一种任何人在有生之年看不到最终成果的行动，在这样可歌可泣的生命投入中，最终成果还重要吗？而且，什么叫最终成果？这几乎成了中国民间的信仰：集合细小，集合时间，不计功利，终能成事。</p><h6 id="如果说，类似于补天救世的大事不容易经常遇到，那么，类似于衔石填海这样的傻事则可能天天发生。把这两种精神加在一起，就是华夏文明能够在世界所有古文明中唯一没有中断和灭亡的原因之一。"><a href="#如果说，类似于补天救世的大事不容易经常遇到，那么，类似于衔石填海这样的傻事则可能天天发生。把这两种精神加在一起，就是华夏文明能够在世界所有古文明中唯一没有中断和灭亡的原因之一。" class="headerlink" title="如果说，类似于补天救世的大事不容易经常遇到，那么，类似于衔石填海这样的傻事则可能天天发生。把这两种精神加在一起，就是华夏文明能够在世界所有古文明中唯一没有中断和灭亡的原因之一。"></a>如果说，类似于补天救世的大事不容易经常遇到，那么，类似于衔石填海这样的傻事则可能天天发生。把这两种精神加在一起，就是华夏文明能够在世界所有古文明中唯一没有中断和灭亡的原因之一。</h6><h5 id="再说-“追日”-。"><a href="#再说-“追日”-。" class="headerlink" title="再说 “追日” 。"></a>再说 “追日” 。</h5><p>追赶太阳。这本是一个近乎疯狂的行为，却因为反映了中国人与太阳的关系而别具深意。在流传下来的早期民谣中，不难发现人们与自然物对话、对峙、对抗的声音。这便是中国式的 “人本精神” 。追不着的太阳永在前方，扑不灭的自信永在心中，走不完的道路永在脚下。在这个过程中，天人之间构成了种喜剧性、游戏性的互诱关系。这个过程也证明，“天人合一” 未必是真正的合一，更多的是互相呼应。而且，很有可能永远也不能直接交集。以此类推，世间很多被视为 “合一” 的两方，其实都是一种永久的追逐。</p><h5 id="最后，要说-“奔月”-。"><a href="#最后，要说-“奔月”-。" class="headerlink" title="最后，要说 “奔月” 。"></a>最后，要说 “奔月” 。</h5><p>一个叫嫦娥的柔雅女子投入了一次壮美的远行，远行的目标在天上，在月宫。这毕竟太远，因此这次远行也就是与人间诀别。</p><p>“嫦娥应悔偷灵药，碧海青天夜夜心。”这  “夜夜心” ，是嫦娥的，也是万民的。于是，这则神话就把蓝天之美、月亮之美、女性之美、柔情之美、诀别之美、飞升之美、想象之美、思念之美、意境之美全部加在一起了，构成了一个 “无限重叠型的美学范式”。</p><p>这个美学范式的终点是孤凄。但是，这是一种被万众共仰的孤凄，因此也不再是真正的孤凄。</p><h6 id="请看，奔月，再加上前面说到的补天、填海、追日，仅仅这几个词语，就洋溢着最壮阔的诗意。而且，这种诗意是那么充满运动感，足以让每一个男子和女子都产生一种行为欲望，连身体手足都会兴奋起来。这种最苍老又最不会衰老的诗意，已经植入每一个中国人身上。"><a href="#请看，奔月，再加上前面说到的补天、填海、追日，仅仅这几个词语，就洋溢着最壮阔的诗意。而且，这种诗意是那么充满运动感，足以让每一个男子和女子都产生一种行为欲望，连身体手足都会兴奋起来。这种最苍老又最不会衰老的诗意，已经植入每一个中国人身上。" class="headerlink" title="请看，奔月，再加上前面说到的补天、填海、追日，仅仅这几个词语，就洋溢着最壮阔的诗意。而且，这种诗意是那么充满运动感，足以让每一个男子和女子都产生一种行为欲望，连身体手足都会兴奋起来。这种最苍老又最不会衰老的诗意，已经植入每一个中国人身上。"></a>请看，奔月，再加上前面说到的补天、填海、追日，仅仅这几个词语，就洋溢着最壮阔的诗意。而且，这种诗意是那么充满运动感，足以让每一个男子和女子都产生一种行为欲望，连身体手足都会兴奋起来。这种最苍老又最不会衰老的诗意，已经植入每一个中国人身上。</h6><p>参考资料——《给青少年的中国文化课①》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机系统漫游</title>
    <link href="/2021/02/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/"/>
    <url>/2021/02/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机系统漫游-理论"><a href="#计算机系统漫游-理论" class="headerlink" title="计算机系统漫游(理论)"></a>计算机系统漫游(理论)</h1><p>计算机系统是由硬件和系统软件组成的，它们共同工作来运行应用程序。</p><h6 id="我们通过跟踪-hello-程序的生命周期来开始对系统的学习。-下图为hello程序"><a href="#我们通过跟踪-hello-程序的生命周期来开始对系统的学习。-下图为hello程序" class="headerlink" title="我们通过跟踪 hello 程序的生命周期来开始对系统的学习。(下图为hello程序)"></a>我们通过跟踪 hello 程序的生命周期来开始对系统的学习。(下图为hello程序)</h6><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello,world\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>hello程序的生命周期是从一个源程序（或者说源文件）开始的。源程序实际上就是一个由值 0 和 1 组成的位（又称为比特）序列，8 个被组织成一组，称为字节。像 hello .c这样只由 ASCII字符构成的文件称为文本文件，所有其他文件都称为二进制文件。其表示方法说明了一个基本思想：系统中所有的信息——包括磁盘文件、内存中的程序、内存中存放的用户数据以及网络上传送的数据，都是由一串比特表示的。However , 为了在系统上运行 hello .c程序，每条 C 语句都必须被其他程序转化为一系列的低级机器语言指令。（下图为转化过程）</p><p><img src="/images/cs/1.png" alt="1"></p><h6 id="那么在运行-hello-程序时，硬件发生了什么呢？（下图为一个典型系统的硬件组织）"><a href="#那么在运行-hello-程序时，硬件发生了什么呢？（下图为一个典型系统的硬件组织）" class="headerlink" title="那么在运行 hello 程序时，硬件发生了什么呢？（下图为一个典型系统的硬件组织）"></a>那么在运行 hello 程序时，硬件发生了什么呢？（下图为一个典型系统的硬件组织）</h6><p><img src="/images/cs/2.png" alt="2"></p><p>First，我们打开 shell 程序（一个命令行解释器，它输出一个提示符，等待输入一个命令行，然后执行这个命令。），then，在键盘上输入字符串“./hello”，shell 程序将字符逐一读入寄存器，再把它存放到内存中。（以下是示意图）</p><p><img src="/images/cs/3.png" alt="3"></p><p>Last，敲下回车。shell 会执行一系列指令来加载可执行的 hello 文件，这些指令将 hello 目标文件中的代码和数据从磁盘复制到主存。数据包括最终会被输出的字符串 “hello, world\n”。（以下是示意图）</p><p><img src="/images/cs/4.png" alt="4"></p><p>一旦目标文件 hello 中的代码和数据被加载到主存，处理器就开始执行 hello 程序的 main 程序中的机器语言指令。这些指令将“hello, world\n” 字符串中的字节从主存复制到寄存器文件，再从寄存器文件中复制到显示设备，最终显示在屏幕上。（以下是示意图）</p><p><img src="/images/cs/5.png" alt="5"></p><h6 id="接下来再讲讲在这之中的重点"><a href="#接下来再讲讲在这之中的重点" class="headerlink" title="接下来再讲讲在这之中的重点"></a>接下来再讲讲在这之中的重点</h6><h4 id="高速缓存及存储器层次结构"><a href="#高速缓存及存储器层次结构" class="headerlink" title="高速缓存及存储器层次结构"></a>高速缓存及存储器层次结构</h4><p>hello 程序的运行告诉我们，系统花了大量的时间在迁移数据。而通过让高速缓存里存放可能经常访问的数据，可提高访问速度。我们再来看看存储器层次结构示例（如下图）</p><p><img src="/images/cs/6.png" alt="6"></p><p>设想一下，我们让程序倾向于更频繁地访问某一个层次上的存储设备，那么下一层的存储设备就可以更慢速一点，也因此可以更大，每个比特位更便宜。这样做的结果就是我们可以接近于层次结构顶部存储设备的高效率向程序提供数据，却有一个与层次结构底层最便宜的存储设备相当的成本。这在计算机程序中被称为<u>局部性</u>。</p><h4 id="操作系统管理硬件并提供清晰的抽象"><a href="#操作系统管理硬件并提供清晰的抽象" class="headerlink" title="操作系统管理硬件并提供清晰的抽象"></a>操作系统管理硬件并提供清晰的抽象</h4><p>在现实世界中，实际存在的是PCB板（印刷电路板），而不是 hello 程序，操作系统就负责管理复杂的硬件体系。正因为此，Linux 或 Windows 操作系统的源代码有500万行甚至更高的数量级。相当于几十个书架中每页 50 行，每卷 1000 页的书的总和。</p><p><img src="/images/cs/7.png" alt="7"></p><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><p>进程是操作系统提供的重要抽象之一，它是操作系统对一个正在运行的程序的一种抽象。这种抽象使得程序看上去是独占地使用处理器、主存和 I/O设备。用户在使用计算机时经常会同时开启多个程序，系统启动时，会秘密启动许多进程，我们一般认为它们是同时运行的。但实际上，在某一个瞬间，CPU只能运行一个进程，但在一秒钟内，它可能运行多个进程，这样就产生并行的错觉。</p><h4 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h4><p>在现代系统中，一个进程实际上可以由多个称为线程的执行单元组成，每个线程都运行在进程的上下文中，并共享同样的代码和全局数据。</p><h4 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h4><p>虚拟内存也是操作系统提供的重要抽象之一，它为每个进程提供了一个假象，即每个进程都在独占地使用主存。每个进程看到的内存都是一致的，称为虚拟地址空间。（以下是示例图）</p><p><img src="/images/cs/8.png" alt="8"></p><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><p>每个I/O设备，包括磁盘、键盘、显示器，甚至网络，都可以看成是文件。使用该抽象，程序能创建、读写文件，而不用处理硬件实际工作中那些恼人的细节。例如：处理磁盘文件内容的应用程序员可以非常幸福，因为他们无须了解具体的磁盘技术，进一步说，同一个程序可以在使用不同磁盘技术的不同系统上运行。</p><h4 id="系统间用网络通信"><a href="#系统间用网络通信" class="headerlink" title="系统间用网络通信"></a>系统间用网络通信</h4><p>系统漫游至此，我们一直是把系统视为一个孤立的硬件和软件的集合体。从一个单独的系统来看，网络可视为一个I/O设备，如下图所示。当系统从主存复制一串字节到网络适配器时，数据流经过网络到达另一台机器，而不是比如说到达本地磁盘驱动器。</p><p><img src="/images/cs/9.png" alt="9"></p><h4 id="并发和并行"><a href="#并发和并行" class="headerlink" title="并发和并行"></a>并发和并行</h4><p>我们用的术语并发（concurrency）是一个通用的概念，指一个同时具有多个活动的系统；而术语并行（parallelism）指的是用并发来使一个系统运行得更快。</p><h4 id="计算机系统中抽象的重要性"><a href="#计算机系统中抽象的重要性" class="headerlink" title="计算机系统中抽象的重要性"></a>计算机系统中抽象的重要性</h4><p>抽象的使用是计算机科学中最为重要的概念之一。例如，为一组函数规定一个简单的应用程序接口（API）就是一个很好的编程习惯，程序员无须了解它内部的工作便可以使用这些代码。不同的编程语言提供不同形式和等级的抽象支持，例如 Java 类的声明和 C 语言的函数原型。</p><p>参考文献——《深入理解计算机系统》原书第三版、《现代操作系统》原书第四版</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>古人荀子学习观———《劝学》</title>
    <link href="/2021/02/07/%E5%8F%A4%E4%BA%BA%E8%8D%80%E5%AD%90%E5%AD%A6%E4%B9%A0%E8%A7%82%E2%80%94%E2%80%94%E2%80%94%E3%80%8A%E5%8A%9D%E5%AD%A6%E3%80%8B/"/>
    <url>/2021/02/07/%E5%8F%A4%E4%BA%BA%E8%8D%80%E5%AD%90%E5%AD%A6%E4%B9%A0%E8%A7%82%E2%80%94%E2%80%94%E2%80%94%E3%80%8A%E5%8A%9D%E5%AD%A6%E3%80%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="古人荀子学习观———《劝学》"><a href="#古人荀子学习观———《劝学》" class="headerlink" title="古人荀子学习观———《劝学》"></a>古人荀子学习观———《劝学》</h2><p>前言：学习自古以来就是人类生存中无法避免的一件事。主张“性恶论”的荀子尤其强调后天学习的重要。由此，我们来探讨一下《劝学》。</p><p>①选自《荀子集解》卷一（中华书局1988年版）。有删节。荀子（约前313—前238），名况，字卿，赵国人，战国末期思想家。</p><h5 id="原文："><a href="#原文：" class="headerlink" title="原文："></a>原文：</h5><p>①君子曰：学不可以已。</p><p>②青，取之于蓝，而青于蓝；冰，水为之，而寒于水。木直中绳，輮以为轮，其曲中规。虽有槁暴，不复挺者，輮使之然也。故木受绳则直，金就砺则利，君子博学而日参省乎己，则知明而行无过矣。</p><p>③吾尝终日而思矣，不如须臾之所学也；吾尝跂而望矣，不如登高之博见也。登高而招，臂非加长也，而见者远；顺风而呼，声非加疾也，而闻者彰。假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河。君子生非异也，善假于物也。</p><p>④积土成山，风雨兴焉；积水成渊，蛟龙生焉；积善成德，而神明自得，圣心备焉。故不积跬步，无以至千里；不积小流，无以成江海。骐骥一跃，不能十步；驽马十驾，功在不舍。锲而舍之，朽木不折；锲而不舍，金石可镂。蚓无爪牙之利，筋骨之强，上食埃土，下饮黄泉，用心一也。蟹六跪而二螯，非蛇鳝之穴无可寄托者，用心躁也。</p><h5 id="译文："><a href="#译文：" class="headerlink" title="译文："></a>译文：</h5><p>①有学问和修养的人说：学习不可以停止。</p><p>②靛青从蓝草中取得，却比蓝草颜色深；冰是水形成的，却比水更寒冷。木头直得合乎木匠用来取直的墨线，用火烘烤木材使它弯曲成车轮，它的弯曲程度合乎圆规。即使又晒干了，不再挺直的原因是火让它这样的。所以木头经过墨线比量就直了，金属制的刀斧拿到磨刀石上去磨就锋利了，有学问和修养的人广泛的学习并且每天对自己检查、省察，就智慧明达而且行为没有过错了。</p><p>③我曾经整天的思考，不如片刻所学到的东西；我曾经踮起脚后跟眺望，不如登上高处后广博的看。登上高处后招手，手臂没有加长，但是人在远处都看得见；顺着风呼喊，声音没有变得宏大，而别人听得更清楚了。借车子的人，不一定善于奔走，却能到达千里之外；借船的人，不一定善于游水，却能横渡江河。君子的天性同一般人没有差别，只是善于借助各种客观条件。</p><p>④泥土累积成山，风和雨在这里兴起；水累积成深渊，蛟龙在这里生存；善良累积成品德，非凡的智慧自然就有了，圣人的心怀也具备了。所以不一步步的累积，就无从到达千里；不将小溪流累积起来，就无法形成江河和大海。骏马跳一次，不能达到十步；劣马拉车走十天的路程，它的功效来源走个不停。雕刻如果半途而废的话，连朽木都不会折；如果不停的雕刻，金石都能雕刻。蚯蚓没有锋利的爪牙和强健的筋骨，却能向上吃到泥土，向下喝到地下的泉水，这是因为它用心专一。蟹有六条腿和两个蟹钳，如果没有蛇和鳝的洞穴就无法藏身，这是因为用心急躁。</p><h4 id="题解：劝学是鼓励学习的意思。那荀子为何如此强调后天学习的重要性？"><a href="#题解：劝学是鼓励学习的意思。那荀子为何如此强调后天学习的重要性？" class="headerlink" title="题解：劝学是鼓励学习的意思。那荀子为何如此强调后天学习的重要性？"></a>题解：劝学是鼓励学习的意思。那荀子为何如此强调后天学习的重要性？</h4><p>荀子是战国时期的儒学思想家，他在有生之年提出了“人性恶”的观点，他认为人性本恶，但可以通过后天教化变恶为善。</p><h4 id="结合今天的社会生活，说说《劝学》中哪些仍值得借鉴，哪些需要更新并赋予其新的内涵？"><a href="#结合今天的社会生活，说说《劝学》中哪些仍值得借鉴，哪些需要更新并赋予其新的内涵？" class="headerlink" title="结合今天的社会生活，说说《劝学》中哪些仍值得借鉴，哪些需要更新并赋予其新的内涵？"></a>结合今天的社会生活，说说《劝学》中哪些仍值得借鉴，哪些需要更新并赋予其新的内涵？</h4><p>作为互联网时代的人们，我们可以把网络和书籍作为我们学习的地方。</p><p>学习要有恒心。</p><p>我们要把道德作为行为的准则。</p><p> 参考资料———语文必修上册、百度</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>成本|别只盯着钱----《薛兆丰经济学讲义》 有感</title>
    <link href="/2021/02/05/2021-02-05-%E6%88%90%E6%9C%AC%E5%88%AB%E5%8F%AA%E7%9B%AF%E7%9D%80%E9%92%B1----%E3%80%8A%E8%96%9B%E5%85%86%E4%B8%B0%E7%BB%8F%E6%B5%8E%E5%AD%A6%E8%AE%B2%E4%B9%89%E3%80%8B-%E6%9C%89%E6%84%9F/"/>
    <url>/2021/02/05/2021-02-05-%E6%88%90%E6%9C%AC%E5%88%AB%E5%8F%AA%E7%9B%AF%E7%9D%80%E9%92%B1----%E3%80%8A%E8%96%9B%E5%85%86%E4%B8%B0%E7%BB%8F%E6%B5%8E%E5%AD%A6%E8%AE%B2%E4%B9%89%E3%80%8B-%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="成本-别只盯着钱"><a href="#成本-别只盯着钱" class="headerlink" title="成本 | 别只盯着钱"></a>成本 | 别只盯着钱</h2><h3 id="文本："><a href="#文本：" class="headerlink" title="文本："></a>文本：</h3><p>了解全部成本和货币成本之间的关系，对于准确理解成本的概念非常重要。 </p><p>很多人以为经济学家眼里只有钱，实际上， 好的经济学者眼里肯定不仅仅是钱，他看到的除了钱，还有钱以外的很多东西。</p><h4 id="货币成本有别于全部成本"><a href="#货币成本有别于全部成本" class="headerlink" title="货币成本有别于全部成本"></a><strong>货币成本有别于全部成本</strong></h4><p>货币成本并不是全部成本。做决定的时候，我们要盯住全部成本，而不只是钱。</p><p>比如，我们去淘旧货，买便宜的东西，货币成本就比较低，但货币成本只是全部成本的一部分。 虽然钱少付了一些。但我们却付出了更多的时间，买到假货劣货的可能性也增加了，这些都是淘旧货的成本。所有这些成本加起来，才是淘旧货的总成本。</p><p>又比如，我们住的地方离市中心的公司远一点，房租会低一点， 但我们同时又付出了更多的时间，这得算到成本里；我们在7-11便利店买东西，货币成本更高，但在那里买东西，能省很多时间，也避免了不少麻烦，这时总成本可能是更低的；我们付钱在“得到” APP （应用程序）里订一个专栏，货币成本当然更高，但是比起那些免费的学习资源来说，我们获取有价值信息的可能性就大得多，这时候总的成本反而是下降的。</p><h4 id="给士兵发薪水比免费征兵更便宜"><a href="#给士兵发薪水比免费征兵更便宜" class="headerlink" title="给士兵发薪水比免费征兵更便宜"></a>给士兵发薪水比免费征兵更便宜</h4><p>再举一个例子：征兵制。在美国，政府开支当中很重要的一部分是国防开支，而国防开支中很重要的一部分则是士兵的薪酬。 有人会想，如果让国会通过一项法律， 规定只要是适龄青年，就有义务当兵，不就能节省好多成本，从而减少国防开支吗?</p><p>事实上，这样的想法是有问题的，因为他只盯着钱，义务征兵时，政府付出的货币成本确实比较低，但是他没有看到另外一个重要成本，就是放弃了的最大代价。</p><p>一个青年， 被征去当兵以后，就不能从事他原来的职业了。这时虽然多了一个廉价的士兵， 但可能少了一位化学家、一个小提琴手，或是一位企业家。总的来说，义务兵制的成本是非常高的，因为它放弃的代价是不可估量的。</p><p>有人会说，那兵源问题如何解决呢?最好的办法，是采用志愿兵制，政府出钱请士兵。政府说我出1元钱请人当兵，当然没人愿意干，出两元钱也没人愿意，出100元、1000元呢?最后可能出到2000元时，就开始有人愿意了。</p><p>第一个愿意接受2000元去当兵的人，是在别处机会最少的人，也是认为当兵能给他带来最大满足感的人，这种人是最适合当兵的。也就是说，政府能够以最低的代价招募到最合适的兵，这才是我们解决兵源问题的好办法。</p><p>经济学家米尔顿·弗里德曼曾经给美国政府提过不少建议，大多数都没被接受。但是这一条，建议将征兵制改为志愿兵制，就被美国政府接受了。这对于减少美国的国防总成本，提高征兵效率，提高兵员质量，有极大的帮助。</p><h4 id="中间商赚差价，让商品价格更便宜"><a href="#中间商赚差价，让商品价格更便宜" class="headerlink" title="中间商赚差价，让商品价格更便宜"></a>中间商赚差价，让商品价格更便宜</h4><p>再举一个例子。好多人批评中间商说，我们买的东西之所以这么贵，是因为中间商在当中赚了很多钱；如果我们直接跟供应商打交道，直接从那里进货的话，我们买东西就会便宜很多。</p><p>其至有人还做了一些调查，说我们在超市里花一元钱买的一瓶水，实际上出厂价只有一毛钱；我们买的马铃薯，在地里一个只要一毛钱，到了商场就要一元钱。也就是说，中间商赚的钱，通常占商品价格的百分之七八十，甚至百分之九十。要是没有中间商的话，我们的生活会幸福得多。</p><p>这种看法，其实也犯了同样的错误，就是只盯着货币成本，没有看到全部成本。</p><p>如果我们不经过中间商，亲自跑到马铃薯地里买马铃薯，然后到青菜地里买青菜，再到屠宰场里买猪肉，那么我们付出的成本会高得不可想象。</p><p>经济学告诉我们：哪怕统计数据确实是准确的，即一元钱的商品里，中间商赚的钱占了百分之八九十，但这百分之八九十，已经是中间商所赚取的最低比例了。由于中间商和中间商之间也在竞争，在地里面只值一毛钱的青菜，人们再付九毛钱，就能在家旁边的超市买到，这已经是在当前的约束条件下，人们可能支付的最低成本了。</p><h4 id="连腐败都得精打细算"><a href="#连腐败都得精打细算" class="headerlink" title="连腐败都得精打细算"></a>连腐败都得精打细算</h4><p>这个道理想明白以后，我们再看看另一种特殊的中间商现象—–药品的价格。过去我们看到很多新闻，说卖药的中间商如何腐败，如何吃喝玩乐打高尔夫；就因为最终买单的是买药的人，中间商增加中间成本的行为可以说是肆无忌惮、为所欲为。</p><p>但问题是，如果中间商真的可以为所欲为，那他们为什么不变本加厉，把所有的亲戚朋友都招进来大鱼大肉呢?事实上，即使是腐败者，也得精打细算，节省成本，在有限的预算下把事清办好。中间渠道的成本，仍然是目前所有可能性当中最低的。</p><p>腐败也是一种制度成本，它也是导致药价上升的原因之一。然而，哪怕是腐败行为，也仍然受到经济规律的约束。腐败的根源在于不适当的制度漏洞，而为了利用这些漏洞，腐败者也仍然需要精打细算。</p><p>那有没有办法让药品价格下降一点?当然有，关键是要改革制度，增加制度的宽松程度，拓宽药物的供应渠道，而不是单靠行政命令。供应增加，价格才会下降。否则，只盯着中间商，生硬地减少自然衍生出来的中间环节，效果很可能会适得其反，使得药品价格不降反升。</p><p>在大多数情况下，中间商在帮助我们减少总成本，而不是增加总成本，而中间商之间的竞争，会使物流的总成本降到最低。</p><p><u>成本不只有货币成本———TCJ</u></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>《读书：目的和前提》--黑塞 读后感（人民教育出版社版）</title>
    <link href="/2021/02/04/2021-02-04-%E3%80%8A%E8%AF%BB%E4%B9%A6-%E7%9B%AE%E7%9A%84%E5%92%8C%E5%89%8D%E6%8F%90%E3%80%8B--%E9%BB%91%E5%A1%9E-%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <url>/2021/02/04/2021-02-04-%E3%80%8A%E8%AF%BB%E4%B9%A6-%E7%9B%AE%E7%9A%84%E5%92%8C%E5%89%8D%E6%8F%90%E3%80%8B--%E9%BB%91%E5%A1%9E-%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="《读书-目的和前提》–黑塞-读后感（人民教育出版社版）"><a href="#《读书-目的和前提》–黑塞-读后感（人民教育出版社版）" class="headerlink" title="《读书: 目的和前提》–黑塞 读后感（人民教育出版社版）"></a>《读书: 目的和前提》–黑塞 读后感（人民教育出版社版）</h2><h3 id="①选自《读书》1990年第4期。杨武能编译。有删改。黑塞（1877–1962），德国作家、诗人。获1946年诺贝尔文学奖。"><a href="#①选自《读书》1990年第4期。杨武能编译。有删改。黑塞（1877–1962），德国作家、诗人。获1946年诺贝尔文学奖。" class="headerlink" title="①选自《读书》1990年第4期。杨武能编译。有删改。黑塞（1877–1962），德国作家、诗人。获1946年诺贝尔文学奖。"></a>①选自《读书》1990年第4期。杨武能编译。有删改。黑塞（1877–1962），德国作家、诗人。获1946年诺贝尔文学奖。</h3><h4 id="文本："><a href="#文本：" class="headerlink" title="文本："></a>文本：</h4><p>①真正的修养不追求任何具体目的，一如所有为了自我完善而作的努力，本身便有意义。对于教养也即精神和心灵完善的追求，并非是朝向某些狭隘目标的艰难跋涉，而是我们自我意识的增强和扩展，从而使我们生活更加丰富多彩，享受更多更大的幸福。因此，真正的修养一如真正的体育，既是完成同时又是激励，随处都可到达终点却又从不停歇，永远都在半道上，与宇宙共振，于永恒中生存。它的目的不在于提高这种或那种能力和本领，而在于帮助我们找到生活的意义，正确认识过去，以大无畏的精神迎接未来。</p><p>②为获得真正的教养可以走不同的道路。最重要的途径之一，就是研读世界文学，就是逐渐地熟悉掌握各国作家和思想家的作品，尤其是他们在作品中留给我们的思想、经验和理想的巨大财富。这条路永无止境，任何人也不可能在什么时候走到尽头；任何人也不可能在什么时候将哪怕仅仅只是一个文化发达民族的全部文学通通读完，更别提整个人类的文学了。然而，对每一部思想家或作家的杰作的深入理解，都会使你感到满足和幸福———不是因为获得了僵死的知识，而是有了鲜活的意识和理解。对于我们来说，问题不在于尽可能地多读，多知道，而在于自由地选择我们个人闲暇时能完全沉浸其中的杰作，领略人类所思、所求的广阔和丰盈，从而在自己与整个人类之间，建立起息息相通的生动联系，使自己的心脏随着人类心脏的跳动而跳动。这，归根到底是一切生活的意义，如果活着不仅仅是为着满足那些赤裸裸的需要的话。读书绝不是要使我们“散心消遣”，倒是要我们集中生智；不是要用虚假的慰藉来麻痹我们，使我们对无意义的人生视而不见，而是正好相反，要帮助我们将自己的人生变得越来越充实、高尚，越来越有意义。</p><p>③要想建立与世界文学的生动联系，读者的第一要务乃是认识自己，进而认识那些特别能引起共鸣的作品，而不要遵循任何的模式或者教学大纲！他必须走一条爱之路，而非义务之路。仅仅因为某部作品有名，因为羞于不了解它就强迫自己去阅读，实乃大错而特错。恰恰相反，每个人都该在他感觉最自然的地方，开始对书籍的阅读、了解和喜爱。有的人在学生时代已早早发现自己对优美诗歌的爱好，也有人更爱好历史和乡土传说；有的人也许喜欢民歌，还有人觉得阅读那种细致考察我们心灵的感受并给予高度理性解释的作品，更加富有魅力和令人欣喜。阅读之路有千万条。可以从小学课本和日历出发，而终结于莎士比亚、歌德或者但丁。一本别人称赞而我们也试图阅读却引不起兴趣的作品，一本令我们反感、无法读进去的作品，千万别强迫自己耐着性子硬往下读，应该干脆放弃。所以也不要过分鼓励和规劝小孩子和年轻人去读某一专门范围内的书；否则，会搞得他们终生厌恶那些优美的著作，是的，甚至厌恶读书本身。让每个人凭自己的爱好去开始阅读，读一部文学作品或者一首诗，或者一则报道、一篇论文，以此为出发点，然后再扩而大之。</p><p>④世界文学的辉煌殿堂对每一位有志者都敞开着，谁也不必对它收藏之丰富望洋兴叹，因为问题不在于数量。有的人一生中只读过十来本书，却仍然不失为真正的读书人。还有人见书便生吞下去，对什么都能说上几句，然而一切努力全部白费。因为教养得有一个可教养的客体作前提，那就是个性或人格。没有这个前提，教养在一定意义上便落了空，纵然能积累某些知识，却不会产生爱和生命。没有爱的阅读，没有敬重的知识，没有心的教养，是戕害性灵的最严重的罪过之一。</p><p>⑤为了说清楚富有个性地、生动热情地与书籍打交道大概是个什么情况，我别无他法，只好将我本人迷恋阅读的一些情形如实相告。我早早地开始了读书生活，也知道应该努力去正确而恰当地选读世界文学。我广泛涉猎，认为了解和懂得某些生疏的事物乃是自己的责任。殊不知这种将读书当作学习，以教养和公平为阅读外国文学的目的和准则的方法，实在不合我的天性；相反，在书籍的世界中，总不断有某种特殊的爱好使我着迷，有某个新发现令我神往，有某种新的热情叫我兴奋不已。许多这样的热情交替出现，有的过一定时期去而复来，有的出现一次便永远消失了······</p><p>⑥少年时代，我唯一熟悉并可以利用的是我祖父的巨大藏书室。在它数以千计的卷帙里面，绝大多数我一点不感兴趣，也永远不会再感兴趣。可是就在这故书堆中，渐渐地，我也发现了另一类东西。一开始吸引我的只是不多的那么几本书；但正是它们，促使我慢慢地将这显得如此无聊的藏书整个翻了一遍，并且终于发掘到自己感兴趣的东西。那不过是一部配有格兰威尔引人入胜插图的《鲁滨逊漂流记》，以及两巨册1830年出版的四开的《一千零一夜》的德译本，同样配有插图。这两部书告诉我，在灰色的大海里也可以捞到珍珠。从此我便孜孜不倦地搜寻大厅中那一个个高高的书架，经常在扶梯顶上一坐就是几个钟头，要不便趴在地板上，让周围一摞一摞的书将自己围起来。也是在那个时候，我第一次读到了巴尔扎克的名字。书架上有几册还是他生前出版的十六开蓝色硬纸面的德译本。我没有忘记，我怎样第一次翻开他的作品，却几乎不懂他说些什么。主人公的财务状况竟描写得如此详尽，每个月入息多少，从母亲方面得到的遗产是多少，还有希望得到多少遗产，以及欠债多少，等等。我大失所望。我所期待的是充满狂热和纠葛的故事，是前往陌生国度的旅行，或者是甜蜜而冒险的艳遇；谁知没有这一切，却要我去操心一个年轻人，一个还完全陌生的年轻人的钱包！我厌烦地将那本蓝色小书放回原处，从此许多许多年都没再读巴尔扎克，直至很久很久之后重新发现他；这次才是认认真真的发现，一劳永逸的发现。</p><p>⑦又过了若干年，一次与书籍有关的新体验带给了我满足。在此之前，通过父亲的指点，我已认识了老子，最先读的是格里尔（Grill）的译本。随后开始出版“中国丛书”，即卫礼贤（Richard Wilhelm）翻译的中国经典著作；在我看来，这是当今德国精神生活中最重要的事件之一。高度发达的、最高贵的人类文化的精华的一支，以往对于德国读者只是陌生的稀罕物，现在已为我们所拥有，不是像往常那样从拉丁文和英文转译过来，经由第三者或第四者倒手，而是直接由一位在中国生活了半辈子、对中国精神了如执掌的德国人所译。这个德国人不只精通中文，也精通德文，并亲身体验到了中国精神对于今日欧洲的意义。“丛书”头一本是孔子的《论语》，我永远不会忘记，我在阅读这本书时如何惊异和心驰神往，书中所说的一切对我如何即陌生又正确，既符合我的预感和期望又美好无比。这套丛书到今天已相当可观。《论语》之后又出了《道德经》《庄子》《孟子》《吕氏春秋》和《中国民间童话》。与此同时，还有好几位译者在努力重译中国的抒情诗，对中国通俗小说的介绍则更加成功。几十年来，我对这些中国典籍的喜爱有增无已，床头多半总是摆着其中的某一部。对现实生活的接近，高贵的谨守最高道德要求的精神与感性的富有乐趣和魅力的日常生活和谐协调——–自如地周旋于崇高的精神境界与纯真的生活享乐之间。如果说印度在禁欲和僧侣式的弃绝尘世方面已臻佳境，令人感动，那么，古代中国在精神修养方面创造的奇迹也毫不逊色。在中国人那里。自然与精神，宗教信仰与日常生活，不是相互敌对和矛盾，而是相反相成，各得其所。</p><p>⑧当今之世，对书籍已经有些轻视了。为数甚多的年轻人，似乎觉得舍弃愉快的生活而埋头读书，是既可笑又不值得的；他们认为人生太短促，太宝贵，却又挤得出时间一星期去泡六次咖啡馆，在舞池中消磨许多时光。可整天待在这些地方，难道就比我们一天留一两个小时去读古代哲人和诗人的作品，更能接近真正的生活吗？不错，读得太多可能有害，书籍可能成为生活的竞争对手。但尽管如此，我任然不反对任何人倾心于书。让我们每个人都从自己能够理解和喜爱的作品开始阅读吧！但单靠报纸和偶然得到的流行文学，是学不会真正意义上的阅读的，必须读杰作。杰作常常不像时髦读物那么适口，那么富于刺激性。杰作需要我们认真对待，需要我们在读的时候花力气，下功夫。我们先得向杰作表明自己的价值，才会发现杰作的真正价值。</p><p><u>《读书： 目的和前提》是随笔，作者用灵活自由的笔触，记述了自己求学读书的生活与感悟。黑塞从切身体会出发，思考读书的意义。文章充满睿智的思考，又温暖感人。黑塞读中国古代论著的感受，以及他关于修养不追求具体目的、流行读物不能取代经典等看法。都发人深思。———学习提示</u></p><p><u>当你对读书感到疑惑时，这里或许有你要的答案。———TCJ</u></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux Ubuntu MATE介绍及社区</title>
    <link href="/2021/02/03/Linux%20Ubuntu%20MATE%E4%BB%8B%E7%BB%8D%E5%8F%8A%E7%A4%BE%E5%8C%BA/"/>
    <url>/2021/02/03/Linux%20Ubuntu%20MATE%E4%BB%8B%E7%BB%8D%E5%8F%8A%E7%A4%BE%E5%8C%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux-Ubuntu-MATE介绍及社区"><a href="#Linux-Ubuntu-MATE介绍及社区" class="headerlink" title="Linux Ubuntu MATE介绍及社区"></a>Linux Ubuntu MATE介绍及社区</h2><h5 id="简述：Ubuntu-MATE是一个操作系统–运行在电脑上的核心软件，类似于-微软的Windows，苹果的OS-X以及谷歌的Chrome-OS-Ubuntu-MATE是GNU-Linux的桌面发行版（分支），一种可靠，安全，功能强大且现代化的计算机操作系统，可与所有其他受欢迎的计算机操作系统相媲美。"><a href="#简述：Ubuntu-MATE是一个操作系统–运行在电脑上的核心软件，类似于-微软的Windows，苹果的OS-X以及谷歌的Chrome-OS-Ubuntu-MATE是GNU-Linux的桌面发行版（分支），一种可靠，安全，功能强大且现代化的计算机操作系统，可与所有其他受欢迎的计算机操作系统相媲美。" class="headerlink" title="简述：Ubuntu MATE是一个操作系统–运行在电脑上的核心软件，类似于 微软的Windows，苹果的OS X以及谷歌的Chrome OS.Ubuntu MATE是GNU/Linux的桌面发行版（分支），一种可靠，安全，功能强大且现代化的计算机操作系统，可与所有其他受欢迎的计算机操作系统相媲美。"></a>简述：Ubuntu MATE是一个操作系统–运行在电脑上的核心软件，类似于 <u>微软的Windows</u>，<u>苹果的OS X</u>以及<u>谷歌的Chrome OS</u>.Ubuntu MATE是GNU/Linux的桌面发行版（分支），一种可靠，安全，功能强大且现代化的计算机操作系统，可与所有其他受欢迎的计算机操作系统相媲美。</h5><p>与其他操作系统不同，Linux用于</p><p>··· 世界上大部分高速且强大的超级电脑</p><p>···大部分节点服务器上</p><p>···以及许多公司的高稳定性高可靠性商用服务器上。</p><h5 id="Ubuntu-MATE是一个稳定，易于使用的操作系统，具有可自行配置的桌面环境。它非常适合那些希望充分利用电脑并喜欢传统桌面的人。它拥有较低的硬件要求，适用于台式机和笔记本电脑，单片机（如树莓派）和较旧的硬件。"><a href="#Ubuntu-MATE是一个稳定，易于使用的操作系统，具有可自行配置的桌面环境。它非常适合那些希望充分利用电脑并喜欢传统桌面的人。它拥有较低的硬件要求，适用于台式机和笔记本电脑，单片机（如树莓派）和较旧的硬件。" class="headerlink" title="Ubuntu MATE是一个稳定，易于使用的操作系统，具有可自行配置的桌面环境。它非常适合那些希望充分利用电脑并喜欢传统桌面的人。它拥有较低的硬件要求，适用于台式机和笔记本电脑，单片机（如树莓派）和较旧的硬件。"></a>Ubuntu MATE是一个稳定，易于使用的操作系统，具有可自行配置的桌面环境。它非常适合那些希望充分利用电脑并喜欢传统桌面的人。它拥有较低的硬件要求，适用于台式机和笔记本电脑，单片机（如树莓派）和较旧的硬件。</h5><h5 id="本操作系统比目前大多数家用计算机预装的操作系统更安全，支持更好。"><a href="#本操作系统比目前大多数家用计算机预装的操作系统更安全，支持更好。" class="headerlink" title="本操作系统比目前大多数家用计算机预装的操作系统更安全，支持更好。"></a>本操作系统比目前大多数家用计算机预装的操作系统更安全，支持更好。</h5><h5 id="Ubuntu-MATE-提供给你使用完整的，功能齐全，预设好的（可能并不完全）桌面环境-。如果你有不满意的地方，可以根据自由定制它的外观及运行方式。"><a href="#Ubuntu-MATE-提供给你使用完整的，功能齐全，预设好的（可能并不完全）桌面环境-。如果你有不满意的地方，可以根据自由定制它的外观及运行方式。" class="headerlink" title="Ubuntu MATE 提供给你使用完整的，功能齐全，预设好的（可能并不完全）桌面环境 。如果你有不满意的地方，可以根据自由定制它的外观及运行方式。"></a>Ubuntu MATE 提供给你使用完整的，功能齐全，预设好的（可能并不完全）桌面环境 。如果你有不满意的地方，可以根据自由定制它的外观及运行方式。</h5><hr><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>Ubuntu MATE 有许多原则和目标：</p><p>···为所有人提供服务。</p><p>···提高 Ubuntu 和 MATE 桌面用户的采用率。</p><p>···作为运行 Ubuntu 复合桌面时性能不够强大的计算机的一个替代选项。</p><p>···作为首选方案为 Ubuntu 的远程工作站，如 LTSP 和 X2Go 的另一选项。</p><p>···为喜欢传统 Gnome 2 桌面隐喻的用户重新造一个避风港。</p><p>···使用 Ubuntu 的主题，壁纸以在 Ubuntu MATE 上获得相似体验。</p><p>···如果可以的话，请给 Ubuntu 或者Debian 项目做点贡献以使它们也获得一些益处。</p><p>···软件专注于功能和稳定性，而不是幻想或极度简单的功能。</p><hr><h3 id="Ubuntu-MATE-是什么？"><a href="#Ubuntu-MATE-是什么？" class="headerlink" title="Ubuntu MATE 是什么？"></a>Ubuntu MATE 是什么？</h3><h4 id="Ubuntu：Ubuntu是部署最多的基于Linux的桌面操作系统之一。Linux是Ubuntu的核心，Linux-使之可以创建安全，强大和多功能的操作系统（例如Ubuntu和Android）。Android现在在全球有巨量的用户，而Android是基于-Linux-的。Ubuntu-有许多不同的-特色版，每一个都拥有自己的桌面环境。Ubuntu-MATE-基于Ubuntu-并添加了-MATE-桌面。"><a href="#Ubuntu：Ubuntu是部署最多的基于Linux的桌面操作系统之一。Linux是Ubuntu的核心，Linux-使之可以创建安全，强大和多功能的操作系统（例如Ubuntu和Android）。Android现在在全球有巨量的用户，而Android是基于-Linux-的。Ubuntu-有许多不同的-特色版，每一个都拥有自己的桌面环境。Ubuntu-MATE-基于Ubuntu-并添加了-MATE-桌面。" class="headerlink" title="Ubuntu：Ubuntu是部署最多的基于Linux的桌面操作系统之一。Linux是Ubuntu的核心，Linux 使之可以创建安全，强大和多功能的操作系统（例如Ubuntu和Android）。Android现在在全球有巨量的用户，而Android是基于  Linux 的。Ubuntu 有许多不同的 特色版，每一个都拥有自己的桌面环境。Ubuntu MATE 基于Ubuntu 并添加了 MATE 桌面。"></a>Ubuntu：Ubuntu是部署最多的基于Linux的桌面操作系统之一。<a href="https://en.wikipedia.org/wiki/Linux">Linux</a>是Ubuntu的核心，Linux 使之可以创建安全，强大和多功能的操作系统（例如Ubuntu和Android）。Android现在在全球有巨量的用户，而Android是基于  Linux 的。Ubuntu 有许多不同的 特色版，每一个都拥有自己的桌面环境。Ubuntu MATE 基于Ubuntu 并添加了 MATE 桌面。</h4><h4 id="MATE-桌面：维基百科称桌面环境是：桌面环境由运行在计算机操作系统上的一组程序组成，它们共享一个公共图形用户界面（GUI）。桌面GUI帮助用户轻松访问和编辑文件。MATE桌面提供一个桌面环境应有的基本组件，例如：文件管理器（Caja）、计算器（MATE-Calculator）、归档管理器（Engrampa）、图片浏览器（Eye-of-MATE）、文档浏览器（Atril）、MATE系统监视器、MATE终端。这些内容都可以进行高度的自定义通过控制中心。"><a href="#MATE-桌面：维基百科称桌面环境是：桌面环境由运行在计算机操作系统上的一组程序组成，它们共享一个公共图形用户界面（GUI）。桌面GUI帮助用户轻松访问和编辑文件。MATE桌面提供一个桌面环境应有的基本组件，例如：文件管理器（Caja）、计算器（MATE-Calculator）、归档管理器（Engrampa）、图片浏览器（Eye-of-MATE）、文档浏览器（Atril）、MATE系统监视器、MATE终端。这些内容都可以进行高度的自定义通过控制中心。" class="headerlink" title="MATE 桌面：维基百科称桌面环境是：桌面环境由运行在计算机操作系统上的一组程序组成，它们共享一个公共图形用户界面（GUI）。桌面GUI帮助用户轻松访问和编辑文件。MATE桌面提供一个桌面环境应有的基本组件，例如：文件管理器（Caja）、计算器（MATE Calculator）、归档管理器（Engrampa）、图片浏览器（Eye of MATE）、文档浏览器（Atril）、MATE系统监视器、MATE终端。这些内容都可以进行高度的自定义通过控制中心。"></a>MATE 桌面：维基百科称<u>桌面环境</u>是：桌面环境由运行在计算机操作系统上的一组程序组成，它们共享一个公共图形用户界面（GUI）。桌面GUI帮助用户轻松访问和编辑文件。MATE桌面提供一个桌面环境应有的基本组件，例如：文件管理器（Caja）、计算器（MATE Calculator）、归档管理器（Engrampa）、图片浏览器（Eye of MATE）、文档浏览器（Atril）、MATE系统监视器、MATE终端。这些内容都可以进行高度的自定义通过控制中心。</h4><p>MATE 桌面使用传统的方案提供了一个直观和有吸引力的桌面环境，这意味着你或许曾经使用过<u> Windows</u> 或者 <u>OS X</u>，你会非常容易上手。</p><p>MATE 桌面具有较久的历史，是 GNOME 2 桌面的派生，GNOME 2 桌面是十多年来许多 Linux 和 Unix 操作系统的默认桌面环境。这意味着MATE桌面已经通过测试并且非常可靠。</p><h4 id="开源：Linux，-Ubuntu-和-MATE-桌面共同之处在于它们是开源的。任何人都可以自由使用，-更改和共享该软件（以修改或未修改的形式）。简而言之，Ubuntu-MATE-完全免费，它完全符合这个词的含义。"><a href="#开源：Linux，-Ubuntu-和-MATE-桌面共同之处在于它们是开源的。任何人都可以自由使用，-更改和共享该软件（以修改或未修改的形式）。简而言之，Ubuntu-MATE-完全免费，它完全符合这个词的含义。" class="headerlink" title="开源：Linux， Ubuntu 和 MATE 桌面共同之处在于它们是开源的。任何人都可以自由使用， 更改和共享该软件（以修改或未修改的形式）。简而言之，Ubuntu MATE 完全免费，它完全符合这个词的含义。"></a>开源：Linux， Ubuntu 和 MATE 桌面共同之处在于它们是开源的。任何人都可以自由使用， 更改和共享该软件（以修改或未修改的形式）。简而言之，Ubuntu MATE 完全免费，它完全符合这个词的含义。</h4><p>虽然你会发现Linux的一些发行版是收费的，但绝大多数都是免费提供的，如Ubuntu MATE。该发行许可方式允许任何人免费赠送，并且不附带任何条款。例如，许可证授予社区的任何成员自由使用Linux用于任何目的，分发，修改，重新分配甚至销售操作系统。如果您进行了修改并重新发布了Linux，则许可证要求您提交修改，以便将其纳入未来版本。不能排除这种情况，如果你做得更好，那么你所做的改动可能会包含在下一个版本的 Ubuntu MATE中。</p><p>许多 Linux 用户使用本操作系统来运行公司业务，或者将其加入他们的产品之中。其中许多公司为Linux提供用于它们自己软件业务的补丁和新功能。这些改进将会被反馈到 <u>Linux 社区</u>，因此软件也得到了改进。这就是我们不需要向用户收取费用即可不断改进和发展的原因。</p><p>与 Windows 和OS X 不同，Linux 并不是由单独一家公司创建和支持的。它受英特尔， Redhat， Linaro ，三星 ，IBM ，SUSE ，德州仪器，谷歌，Canonical ，Oracle，AMD 和 微软 的支持。在过去的15年中，有4,000多名开发人员为Linux做出了自己的贡献。</p><p>无论您是 Ubuntu MATE 的个人用户，Ubuntu MATE 软件或者应用程序开发人员，还是使用本操作系统的组织的员工，您都是 Linux 和开源社区的成员，并受益于开发人员的Ubuntu MATE 及其相关项目：Linux，MATE 和 Ubuntu。社区成员几乎可以在任何硬件上运行Linux，从最漂亮的 Macbook 到最便宜的上网本，从最新的Chromebook 到一些为 Windows 设计的旧机器，从最强大的网络服务器到最小的智能恒温器。</p><h3 id="附：https-ubuntu-mate-community-（Linux-Ubuntu-MATE社区网址）"><a href="#附：https-ubuntu-mate-community-（Linux-Ubuntu-MATE社区网址）" class="headerlink" title="附：https://ubuntu-mate.community/  （Linux Ubuntu MATE社区网址）"></a>附：<a href="https://ubuntu-mate.community/">https://ubuntu-mate.community/</a>  （Linux Ubuntu MATE社区网址）</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于个人博客搭建(Hexo+gitee)</title>
    <link href="/2020/12/05/%E5%85%B3%E4%BA%8E%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BAHexo+gitee/"/>
    <url>/2020/12/05/%E5%85%B3%E4%BA%8E%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BAHexo+gitee/</url>
    
    <content type="html"><![CDATA[<p>##关于个人博客搭建(Hexo+gitee)</p><p><img src="/images/Hexo+gitee/1.png" alt="1"></p><hr><p>Hexo是当前市场上较火的一个静态博客框架，能够快速搭建个人博客。让我们开始吧！</p><hr><h3 id="必要准备"><a href="#必要准备" class="headerlink" title="必要准备"></a><strong>必要准备</strong></h3><p>1.安装Node.js(下载地址：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a>)</p><p>点击下载链接后进入如下页面，根据自己情况下载即可，下载好后正常安装</p><p><img src="/images/Hexo+gitee/2.png" alt="2"></p><p>现在来到终端</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">1 #确认Node安装<br>2 node -v<br>3 #若正常安装，则返回如下(版本号可能不同，下同)<br>v14.15.1<br>5 npm -v<br>6.14.8<br>7 #ok，现在安装淘宝镜像加速器<br>8 npm install -g cnpm --registry=https://registry.npm.taobao.org<br>9 cnpm -v<br>cnpm@6.1.1 (/usr/local/lib/node_modules/cnpm/lib/parse_argv.js)<br>npm@6.14.9 (/usr/local/lib/node_modules/cnpm/node_modules/npm/lib/npm.js)<br>node@14.15.1 (/usr/local/bin/node)<br>npminstall@3.28.0 (/usr/local/lib/node_modules/cnpm/node_modules/npminstall/lib/index.js)<br>prefix=/usr/local <br>darwin x64 18.5.0 <br>registry=https://r.npm.taobao.org<br></code></pre></div></td></tr></table></figure><p>2.安装Hexo(官网:<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a>)</p><p>在终端输入npm install hexo-cli -g</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">1 npm install hexo-cli -g<br>2 #确认安装<br>3 hexo -v<br>INFO  Validating config<br>hexo: 5.2.0<br>hexo-cli: 4.2.0<br>os: Darwin 18.5.0 darwin x64<br>node: 14.15.1<br>v8: 8.4.371.19-node.17<br>uv: 1.40.0<br>zlib: 1.2.11<br>brotli: 1.0.9<br>ares: 1.16.1<br>modules: 83<br>nghttp2: 1.41.0<br>napi: 7<br>llhttp: 2.1.3<br>openssl: 1.1.1g<br>cldr: 37.0<br>icu: 67.1<br>tz:2020a<br>unicode: 13.0<br></code></pre></div></td></tr></table></figure><p>OK，到现在你已经成功安装了Node.js和Hexo了</p><hr><h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>1.新建文件夹blog(<strong>记住它在你系统中的路径</strong>)</p><p>来到终端</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">1 #使用cd命令来到blog目录下<br>2 #确认操作<br>3 pwd<br>/Users/tcj/blog<br>5 #在blog目录下初始化博客<br>6 sudo hexo init<br>7 #确认初始化成功<br>8 ls<br> db.jsonpublic<br>.deploy_gitnode_modulesscaffolds<br>.gitignorepackage-lock.jsonsource<br>_config.ymlpackage.jsonthemes<br>9 #启动博客<br>10 hexo s<br>INFO  Validating config<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.<br></code></pre></div></td></tr></table></figure><p>2.打开浏览器，输入localhost:4000</p><p><img src="/images/Hexo+gitee/3.png" alt="3"></p><p>上面是Hexo默认页面和自动创建的Hello World文章，这说明你已经在本地部署成功了！</p><hr><h3 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h3><p>这是最后一步，完成后就可以通过网络访问你的博客了！</p><p>1.准备一个码云账号(官网:<a href="https://gitee.com/">https://gitee.com/</a>)</p><p>2.新建一个仓库<img src="/images/Hexo+gitee/4.png" alt="4"></p><p>图中箭头所指一定要一致</p><p>3，来到终端</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">1 #在之前目录下安装git<br>2 cnpm install --save hexo-deployer-git<br>3 #修改当前目录下的配置文件：_config.yml<br>**修改如下<br> deploy:<br>  type: git<br>  repo: 仓库URL地址<br>  branch: master<br>例如：deploy:<br>  type: git<br>  repo: https://gitee.com/tcj155038/tcj155038.git<br>  branch: master<br></code></pre></div></td></tr></table></figure><p>修改完成后保存退出**(冒号后有空格)**</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">1 #将项目部署到码云仓库<br>2 hexo d<br></code></pre></div></td></tr></table></figure><p><img src="/images/Hexo+gitee/5.png" alt="5"></p><p>这时仓库中已有文件了！</p><p>接着开启Gitee Pages 静态网页托管服务</p><p><img src="/images/Hexo+gitee/6.png" alt="6"></p><p>开启后会出现一个网址，这就是你的博客网址</p><p><img src="/images/Hexo+gitee/7.png" alt="7"></p><p>打开浏览器输入这个网址</p><p><img src="/images/Hexo+gitee/3.png" alt="3"></p><p>可以正常访问！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>my first blog</title>
    <link href="/2020/12/04/my-first-blog/"/>
    <url>/2020/12/04/my-first-blog/</url>
    
    <content type="html"><![CDATA[<p>tcj的第一篇博文</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
